{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Test mpvb 5 - A guide to XPO's REST APIs",
    "description": "\n# Introduction \nWelcome to XPO's open API explorer! Here, you have the ability to discover the possibilities that XPO has to offer through our suite of open APIs\n\nOur APIs are built on modern REST principles, and will enable you to drive success for your organization by directly integrating information from XPO's transportation ecosystem to your own applications. \n- **Key features are:** \n * On-demand access to real-time market rates, across multiple modes of transportation. \n * Ability to convert rate quotes to live orders. \n\nIn this page, you'll find the information regarding all of our available APIs, their operations, along with complete details on parameters, requests and response formats.\n\nAre you looking for an API capability that we don't yet offer? Please reach out to us at apionboarding@xpo.com and let us know what you're looking for. We are continuously working to offer new integration capabilities for our customers and partners."
  },
  "servers": [
    {
      "url": "https://api-uat-xpoconnect.xpo.com",
      "description": "Test environment."
    },
    {
      "url": "https://api-xpoconnect.xpo.com",
      "description": "Production environment."
    }
  ],
  "security": [
    {
      "OAuth": []
    }
  ],
  "tags": [
    {
      "name": "OAuth API",
      "description": "XPO Logistics uses OAuth 2.0 token mechanism to securely access API endpoints using client credentials grant type. \n\nUser must get Client Id, Client Secret, Scope and API Key prior to generate bearer token either by requesting to apionboarding@xpo.com or submitting a support query  <a href=\"https://apisolutions.xpo.com/transportation/#contact-us\">Here</a>.\n\nThe diagram below illustrates the supported authorization flow.\n\n<img src=\"https://xpodotcom.azureedge.net/xpo/files/s41/auth_token_flow.png\" alt=\"Authorization Flow Diagram\">"
    },
    {
      "name": "Quote API",
      "description": "XPO's quote API provides real-time, on-demand rates for either full truckload or less than truckload shipments. The quoting API provides 24/7 on-demand access to XPO's rates, allowing you to get a price at any time."
    }
  ],
  "paths": {
    "/oAuthAPI/rest/v1/token": {
      "post": {
        "description": "Generate token allows you to generate a bearer token. In order to generate the token, you will need to provide an API key in the request header parameter as well as Client ID, Client Secret, Scope and Grant Type in the payload.\n\n Once the token is generated, you will be able to use that token to access any of XPO's open API endpoints. The generated token will expire in 2 hours. Once expired, you will need to refresh the token in order to continue to access the API.",
        "operationId": "Generate Token",
        "security": [],
        "tags": [
          "OAuth API"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "[JSON]Generate Token Request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tokenrequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/' \\\n\n--header 'x-api-key: XXXXXXXXXXXXXXXX' \\\n\n--header 'Content-Type: application\/json' \\\n\n--data-raw '{\n\n\"client_id\": \"xpo-tran-boomi-test-app\",\n\n\"client_secret\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n\n\"scope\": \"xpo-rates-api\",\n\n\"grant_type\": \"client_credentials\"\n\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n\n  .build();\n\nMediaType mediaType = MediaType.parse(\"application\/json\");\n\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\");\n\nRequest request = new Request.Builder()\n\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/\")\n\n  .method(\"POST\", body)\n\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXX\")\n\n  .addHeader(\"Content-Type\", \"application\/json\")\n\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\n\nvar options = {\n\n  'method': 'POST',\n\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/',\n\n  'headers': {\n\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXX',\n\n    'Content-Type': 'application\/json'\n\n  },\n\n  body: JSON.stringify({\"client_id\":\"xpo-tran-boomi-test-app\",\"client_secret\":\"XXXXXXXXXXXXXXXXXXXX\",\"scope\":\"xpo-rates-api\",\"grant_type\":\"client_credentials\"})\n\n\n\n};\n\nrequest(options, function (error, response) { \n\n  if (error) throw new Error(error);\n\n  console.log(response.body);\n\n});\n\n"
          },
          {
            "lang": "C#(RestSharp)",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/\");\n\nclient.Timeout = -1;\n\nvar request = new RestRequest(Method.POST);\n\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\");\n\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\n\nrequest.AddParameter(\"application\/json\", \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\",  ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);\n\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/successtoken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/Create": {
      "post": {
        "description": "Create quote accepts information about an individual shipment, and returns a rate - this is the price that XPO would charge to move that shipment. \n\n In order to create a quote, you will need to provide a valid API key and token in the header parameter and shipment details in the request payload.",
        "operationId": "Create Quote",
        "tags": [
          "Quote API"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "pass async=true, if asynchronous call is needed.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/quoterequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/Create' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"partnerOrderCoder\": \"lks-202006021928\",\r\n    \"partnerIdentifierCode\": \"2-1-BSTOBECA\",\r\n    \"equipmentCategoryCode\": \"VN\",\r\n    \"equipmentTypeCode\": \"V\",\r\n    \"transportationMode\": [\"LTL\"],\r\n    \"additionalServices\": [{\r\n            \"code\": \"GUARANTEED\"\r\n        }\r\n    ],\r\n    \"stops\": [{\r\n            \"addressInformations\": {\r\n                \"locationId\": null,\r\n                \"locationName\": \"\",\r\n                \"addressLine1\": \"\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"North Ridgeville\",\r\n                \"stateCode\": \"OH\",\r\n                \"country\": \"USA\",\r\n                \"zipCode\": \"44039\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-05-28T00:00:00-04:00\",\r\n            \"scheduledTimeTo\": \"2020-05-30T00:00:00-04:00\",\r\n            \"specialRequirement\": [{\r\n                    \"code\": \"APPOINTMENT_REQUIRED\"\r\n                }\r\n            ],\r\n            \"stopContactInformations\": [{\r\n                    \"firstName\": \"TestData\",\r\n                    \"lastName\": \"Lname\",\r\n                    \"email\": \"devcustomer@gmail.com\",\r\n                    \"phoneNumbers\": [{\r\n                            \"type\": 1,\r\n                            \"number\": \"6606546565\"\r\n                        }\r\n                    ],\r\n                    \"title\": \"\",\r\n                    \"isPrimary\": false\r\n                }\r\n            ],\r\n            \"note\": \"\",\r\n            \"stopReferenceNumbers\": [{\r\n                    \"typeCode\": \"\",\r\n                    \"value\": \"\"\r\n                }\r\n            ],\r\n            \"sequenceNo\": 1\r\n        }, {\r\n            \"addressInformations\": {\r\n                \"locationId\": null,\r\n                \"locationName\": \"\",\r\n                \"addressLine1\": \"\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"Chicago\",\r\n                \"stateCode\": \"IL\",\r\n                \"country\": \"USA\",\r\n                \"zipCode\": \"60606\"\r\n            },\r\n            \"type\": 3,\r\n            \"scheduledTimeFrom\": \"2020-05-28T00:00:00-04:00\",\r\n            \"scheduledTimeTo\": \"2020-05-30T00:00:00-04:00\",\r\n            \"specialRequirement\": [{\r\n                    \"code\": \"APPOINTMENT_REQUIRED\"\r\n                }\r\n            ],\r\n            \"stopContactInformations\": [{\r\n                    \"firstName\": \"TestData\",\r\n                    \"lastName\": \"Lname\",\r\n                    \"email\": \"devcustomer@gmail.com\",\r\n                    \"phoneNumbers\": [{\r\n                            \"type\": 1,\r\n                            \"number\": \"6606546565\"\r\n                        }\r\n                    ],\r\n                    \"title\": \"\",\r\n                    \"isPrimary\": false\r\n                }\r\n            ],\r\n            \"note\": null,\r\n            \"stopReferenceNumbers\": null,\r\n            \"sequenceNo\": 2\r\n        }\r\n    ],\r\n    \"items\": [{\r\n            \"productCode\": \"acetic acid\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"BAG\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BOXS\",\r\n            \"weight\": 15,\r\n            \"weightUomCode\": \"LBS\",\r\n            \"height\": 12.0,\r\n            \"heightUomCode\": \"CM\",\r\n            \"length\": 14.0,\r\n            \"lengthUomCode\": \"CM\",\r\n            \"width\": 16.0,\r\n            \"widthUomCode\": \"CM\",\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unNumber\": \"0\",\r\n                \"packingGroup\": \"0\",\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": \"\",\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": \"\",\r\n                \"containerType\": \"\",\r\n                \"hazardousDescription\": \"\",\r\n                \"hazardousPhoneNumber\": \"\",\r\n                \"shippingName\": \"\"\r\n            },\r\n            \"isTemperatureControlled\": false,\r\n            \"temperatureInformation\": {\r\n                \"high\": 0,\r\n                \"low\": 0,\r\n                \"highUom\": \"\",\r\n                \"lowUom\": \"\"\r\n            },\r\n            \"sku\": \"\",\r\n            \"itemDescription\": \"\",\r\n            \"itemNumber\": \"\",\r\n            \"nmfcCode\": \"\",\r\n            \"class\": \"50\",\r\n            \"declaredValueAmount\": 4000.0\r\n        }\r\n    ],\r\n    \"contactInformations\": [{\r\n            \"firstName\": \"Customer Admin\",\r\n            \"lastName\": \"\",\r\n            \"email\": \"devcustomer@gmail.com\",\r\n            \"phoneNumbers\": [{\r\n                    \"type\": 1,\r\n                    \"number\": \"+15444454555\"\r\n                }\r\n            ],\r\n            \"title\": \"\",\r\n            \"isPrimary\": true\r\n        }\r\n    ],\r\n    \"applicationSource\": \"GPAPI\",\r\n    \"referenceNumbers\": null\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n    \\\"partnerOrderCoder\\\": \\\"lks-202006021928\\\",\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-BSTOBECA\\\",\\r\\n    \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\r\\n    \\\"equipmentTypeCode\\\": \\\"V\\\",\\r\\n    \\\"transportationMode\\\": [\\\"LTL\\\"],\\r\\n    \\\"additionalServices\\\": [{\\r\\n            \\\"code\\\": \\\"GUARANTEED\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"stops\\\": [{\\r\\n            \\\"addressInformations\\\": {\\r\\n                \\\"locationId\\\": null,\\r\\n                \\\"locationName\\\": \\\"\\\",\\r\\n                \\\"addressLine1\\\": \\\"\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"North Ridgeville\\\",\\r\\n                \\\"stateCode\\\": \\\"OH\\\",\\r\\n                \\\"country\\\": \\\"USA\\\",\\r\\n                \\\"zipCode\\\": \\\"44039\\\"\\r\\n            },\\r\\n            \\\"type\\\": 1,\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-05-28T00:00:00-04:00\\\",\\r\\n            \\\"scheduledTimeTo\\\": \\\"2020-05-30T00:00:00-04:00\\\",\\r\\n            \\\"specialRequirement\\\": [{\\r\\n                    \\\"code\\\": \\\"APPOINTMENT_REQUIRED\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [{\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [{\\r\\n                            \\\"type\\\": 1,\\r\\n                            \\\"number\\\": \\\"6606546565\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": \\\"\\\",\\r\\n            \\\"stopReferenceNumbers\\\": [{\\r\\n                    \\\"typeCode\\\": \\\"\\\",\\r\\n                    \\\"value\\\": \\\"\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"sequenceNo\\\": 1\\r\\n        }, {\\r\\n            \\\"addressInformations\\\": {\\r\\n                \\\"locationId\\\": null,\\r\\n                \\\"locationName\\\": \\\"\\\",\\r\\n                \\\"addressLine1\\\": \\\"\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"Chicago\\\",\\r\\n                \\\"stateCode\\\": \\\"IL\\\",\\r\\n                \\\"country\\\": \\\"USA\\\",\\r\\n                \\\"zipCode\\\": \\\"60606\\\"\\r\\n            },\\r\\n            \\\"type\\\": 3,\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-05-28T00:00:00-04:00\\\",\\r\\n            \\\"scheduledTimeTo\\\": \\\"2020-05-30T00:00:00-04:00\\\",\\r\\n            \\\"specialRequirement\\\": [{\\r\\n                    \\\"code\\\": \\\"APPOINTMENT_REQUIRED\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [{\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [{\\r\\n                            \\\"type\\\": 1,\\r\\n                            \\\"number\\\": \\\"6606546565\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": null,\\r\\n            \\\"stopReferenceNumbers\\\": null,\\r\\n            \\\"sequenceNo\\\": 2\\r\\n        }\\r\\n    ],\\r\\n    \\\"items\\\": [{\\r\\n            \\\"productCode\\\": \\\"acetic acid\\\",\\r\\n            \\\"units\\\": 10,\\r\\n            \\\"unitTypeCode\\\": \\\"BAG\\\",\\r\\n            \\\"packageUnits\\\": 2,\\r\\n            \\\"packageTypeCode\\\": \\\"BOXS\\\",\\r\\n            \\\"weight\\\": 15,\\r\\n            \\\"weightUomCode\\\": \\\"LBS\\\",\\r\\n            \\\"height\\\": 12.0,\\r\\n            \\\"heightUomCode\\\": \\\"CM\\\",\\r\\n            \\\"length\\\": 14.0,\\r\\n            \\\"lengthUomCode\\\": \\\"CM\\\",\\r\\n            \\\"width\\\": 16.0,\\r\\n            \\\"widthUomCode\\\": \\\"CM\\\",\\r\\n            \\\"isHazmat\\\": false,\\r\\n            \\\"hazardousItemInfo\\\": {\\r\\n                \\\"unNumber\\\": \\\"0\\\",\\r\\n                \\\"packingGroup\\\": \\\"0\\\",\\r\\n                \\\"receptacleSize\\\": 0,\\r\\n                \\\"hazardousClass\\\": \\\"\\\",\\r\\n                \\\"numberofReceptacles\\\": 0,\\r\\n                \\\"unitofMeasure\\\": \\\"\\\",\\r\\n                \\\"containerType\\\": \\\"\\\",\\r\\n                \\\"hazardousDescription\\\": \\\"\\\",\\r\\n                \\\"hazardousPhoneNumber\\\": \\\"\\\",\\r\\n                \\\"shippingName\\\": \\\"\\\"\\r\\n            },\\r\\n            \\\"isTemperatureControlled\\\": false,\\r\\n            \\\"temperatureInformation\\\": {\\r\\n                \\\"high\\\": 0,\\r\\n                \\\"low\\\": 0,\\r\\n                \\\"highUom\\\": \\\"\\\",\\r\\n                \\\"lowUom\\\": \\\"\\\"\\r\\n            },\\r\\n            \\\"sku\\\": \\\"\\\",\\r\\n            \\\"itemDescription\\\": \\\"\\\",\\r\\n            \\\"itemNumber\\\": \\\"\\\",\\r\\n            \\\"nmfcCode\\\": \\\"\\\",\\r\\n            \\\"class\\\": \\\"50\\\",\\r\\n            \\\"declaredValueAmount\\\": 4000.0\\r\\n        }\\r\\n    ],\\r\\n    \\\"contactInformations\\\": [{\\r\\n            \\\"firstName\\\": \\\"Customer Admin\\\",\\r\\n            \\\"lastName\\\": \\\"\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n            \\\"phoneNumbers\\\": [{\\r\\n                    \\\"type\\\": 1,\\r\\n                    \\\"number\\\": \\\"+15444454555\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"\\\",\\r\\n            \\\"isPrimary\\\": true\\r\\n        }\\r\\n    ],\\r\\n    \\\"applicationSource\\\": \\\"GPAPI\\\",\\r\\n    \\\"referenceNumbers\\\": null\\r\\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/Create\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/Create',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\"partnerOrderCoder\":\"lks-202006021928\",\"partnerIdentifierCode\":\"2-1-BSTOBECA\",\"equipmentCategoryCode\":\"VN\",\"equipmentTypeCode\":\"V\",\"transportationMode\":[\"LTL\"],\"additionalServices\":[{\"code\":\"GUARANTEED\"}],\"stops\":[{\"addressInformations\":{\"locationId\":null,\"locationName\":\"\",\"addressLine1\":\"\",\"addressLine2\":\"\",\"cityName\":\"North Ridgeville\",\"stateCode\":\"OH\",\"country\":\"USA\",\"zipCode\":\"44039\"},\"type\":1,\"scheduledTimeFrom\":\"2020-05-28T00:00:00-04:00\",\"scheduledTimeTo\":\"2020-05-30T00:00:00-04:00\",\"specialRequirement\":[{\"code\":\"APPOINTMENT_REQUIRED\"}],\"stopContactInformations\":[{\"firstName\":\"TestData\",\"lastName\":\"Lname\",\"email\":\"devcustomer@gmail.com\",\"phoneNumbers\":[{\"type\":1,\"number\":\"6606546565\"}],\"title\":\"\",\"isPrimary\":false}],\"note\":\"\",\"stopReferenceNumbers\":[{\"typeCode\":\"\",\"value\":\"\"}],\"sequenceNo\":1},{\"addressInformations\":{\"locationId\":null,\"locationName\":\"\",\"addressLine1\":\"\",\"addressLine2\":\"\",\"cityName\":\"Chicago\",\"stateCode\":\"IL\",\"country\":\"USA\",\"zipCode\":\"60606\"},\"type\":3,\"scheduledTimeFrom\":\"2020-05-28T00:00:00-04:00\",\"scheduledTimeTo\":\"2020-05-30T00:00:00-04:00\",\"specialRequirement\":[{\"code\":\"APPOINTMENT_REQUIRED\"}],\"stopContactInformations\":[{\"firstName\":\"TestData\",\"lastName\":\"Lname\",\"email\":\"devcustomer@gmail.com\",\"phoneNumbers\":[{\"type\":1,\"number\":\"6606546565\"}],\"title\":\"\",\"isPrimary\":false}],\"note\":null,\"stopReferenceNumbers\":null,\"sequenceNo\":2}],\"items\":[{\"productCode\":\"acetic acid\",\"units\":10,\"unitTypeCode\":\"BAG\",\"packageUnits\":2,\"packageTypeCode\":\"BOXS\",\"weight\":15,\"weightUomCode\":\"LBS\",\"height\":12,\"heightUomCode\":\"CM\",\"length\":14,\"lengthUomCode\":\"CM\",\"width\":16,\"widthUomCode\":\"CM\",\"isHazmat\":false,\"hazardousItemInfo\":{\"unNumber\":\"0\",\"packingGroup\":\"0\",\"receptacleSize\":0,\"hazardousClass\":\"\",\"numberofReceptacles\":0,\"unitofMeasure\":\"\",\"containerType\":\"\",\"hazardousDescription\":\"\",\"hazardousPhoneNumber\":\"\",\"shippingName\":\"\"},\"isTemperatureControlled\":false,\"temperatureInformation\":{\"high\":0,\"low\":0,\"highUom\":\"\",\"lowUom\":\"\"},\"sku\":\"\",\"itemDescription\":\"\",\"itemNumber\":\"\",\"nmfcCode\":\"\",\"class\":\"50\",\"declaredValueAmount\":4000}],\"contactInformations\":[{\"firstName\":\"Customer Admin\",\"lastName\":\"\",\"email\":\"devcustomer@gmail.com\",\"phoneNumbers\":[{\"type\":1,\"number\":\"+15444454555\"}],\"title\":\"\",\"isPrimary\":true}],\"applicationSource\":\"GPAPI\",\"referenceNumbers\":null})\r\n\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/Create\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\\r\\n    \\\"partnerOrderCoder\\\": \\\"lks-202006021928\\\",\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-BSTOBECA\\\",\\r\\n    \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\r\\n    \\\"equipmentTypeCode\\\": \\\"V\\\",\\r\\n    \\\"transportationMode\\\": [\\\"LTL\\\"],\\r\\n    \\\"additionalServices\\\": [{\\r\\n            \\\"code\\\": \\\"GUARANTEED\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"stops\\\": [{\\r\\n            \\\"addressInformations\\\": {\\r\\n                \\\"locationId\\\": null,\\r\\n                \\\"locationName\\\": \\\"\\\",\\r\\n                \\\"addressLine1\\\": \\\"\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"North Ridgeville\\\",\\r\\n                \\\"stateCode\\\": \\\"OH\\\",\\r\\n                \\\"country\\\": \\\"USA\\\",\\r\\n                \\\"zipCode\\\": \\\"44039\\\"\\r\\n            },\\r\\n            \\\"type\\\": 1,\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-05-28T00:00:00-04:00\\\",\\r\\n            \\\"scheduledTimeTo\\\": \\\"2020-05-30T00:00:00-04:00\\\",\\r\\n            \\\"specialRequirement\\\": [{\\r\\n                    \\\"code\\\": \\\"APPOINTMENT_REQUIRED\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [{\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [{\\r\\n                            \\\"type\\\": 1,\\r\\n                            \\\"number\\\": \\\"6606546565\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": \\\"\\\",\\r\\n            \\\"stopReferenceNumbers\\\": [{\\r\\n                    \\\"typeCode\\\": \\\"\\\",\\r\\n                    \\\"value\\\": \\\"\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"sequenceNo\\\": 1\\r\\n        }, {\\r\\n            \\\"addressInformations\\\": {\\r\\n                \\\"locationId\\\": null,\\r\\n                \\\"locationName\\\": \\\"\\\",\\r\\n                \\\"addressLine1\\\": \\\"\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"Chicago\\\",\\r\\n                \\\"stateCode\\\": \\\"IL\\\",\\r\\n                \\\"country\\\": \\\"USA\\\",\\r\\n                \\\"zipCode\\\": \\\"60606\\\"\\r\\n            },\\r\\n            \\\"type\\\": 3,\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-05-28T00:00:00-04:00\\\",\\r\\n            \\\"scheduledTimeTo\\\": \\\"2020-05-30T00:00:00-04:00\\\",\\r\\n            \\\"specialRequirement\\\": [{\\r\\n                    \\\"code\\\": \\\"APPOINTMENT_REQUIRED\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [{\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [{\\r\\n                            \\\"type\\\": 1,\\r\\n                            \\\"number\\\": \\\"6606546565\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": null,\\r\\n            \\\"stopReferenceNumbers\\\": null,\\r\\n            \\\"sequenceNo\\\": 2\\r\\n        }\\r\\n    ],\\r\\n    \\\"items\\\": [{\\r\\n            \\\"productCode\\\": \\\"acetic acid\\\",\\r\\n            \\\"units\\\": 10,\\r\\n            \\\"unitTypeCode\\\": \\\"BAG\\\",\\r\\n            \\\"packageUnits\\\": 2,\\r\\n            \\\"packageTypeCode\\\": \\\"BOXS\\\",\\r\\n            \\\"weight\\\": 15,\\r\\n            \\\"weightUomCode\\\": \\\"LBS\\\",\\r\\n            \\\"height\\\": 12.0,\\r\\n            \\\"heightUomCode\\\": \\\"CM\\\",\\r\\n            \\\"length\\\": 14.0,\\r\\n            \\\"lengthUomCode\\\": \\\"CM\\\",\\r\\n            \\\"width\\\": 16.0,\\r\\n            \\\"widthUomCode\\\": \\\"CM\\\",\\r\\n            \\\"isHazmat\\\": false,\\r\\n            \\\"hazardousItemInfo\\\": {\\r\\n                \\\"unNumber\\\": \\\"0\\\",\\r\\n                \\\"packingGroup\\\": \\\"0\\\",\\r\\n                \\\"receptacleSize\\\": 0,\\r\\n                \\\"hazardousClass\\\": \\\"\\\",\\r\\n                \\\"numberofReceptacles\\\": 0,\\r\\n                \\\"unitofMeasure\\\": \\\"\\\",\\r\\n                \\\"containerType\\\": \\\"\\\",\\r\\n                \\\"hazardousDescription\\\": \\\"\\\",\\r\\n                \\\"hazardousPhoneNumber\\\": \\\"\\\",\\r\\n                \\\"shippingName\\\": \\\"\\\"\\r\\n            },\\r\\n            \\\"isTemperatureControlled\\\": false,\\r\\n            \\\"temperatureInformation\\\": {\\r\\n                \\\"high\\\": 0,\\r\\n                \\\"low\\\": 0,\\r\\n                \\\"highUom\\\": \\\"\\\",\\r\\n                \\\"lowUom\\\": \\\"\\\"\\r\\n            },\\r\\n            \\\"sku\\\": \\\"\\\",\\r\\n            \\\"itemDescription\\\": \\\"\\\",\\r\\n            \\\"itemNumber\\\": \\\"\\\",\\r\\n            \\\"nmfcCode\\\": \\\"\\\",\\r\\n            \\\"class\\\": \\\"50\\\",\\r\\n            \\\"declaredValueAmount\\\": 4000.0\\r\\n        }\\r\\n    ],\\r\\n    \\\"contactInformations\\\": [{\\r\\n            \\\"firstName\\\": \\\"Customer Admin\\\",\\r\\n            \\\"lastName\\\": \\\"\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n            \\\"phoneNumbers\\\": [{\\r\\n                    \\\"type\\\": 1,\\r\\n                    \\\"number\\\": \\\"+15444454555\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"\\\",\\r\\n            \\\"isPrimary\\\": true\\r\\n        }\\r\\n    ],\\r\\n    \\\"applicationSource\\\": \\\"GPAPI\\\",\\r\\n    \\\"referenceNumbers\\\": null\\r\\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/ConvertToOrders": {
      "post": {
        "description": "Convert Quote to Order allows you to take a previously created quote and place it as an active order.\n\n In order to convert a quote to an order, you will need to provide a valid API key and token in the header parameter, and the quote details in the request payload.",
        "operationId": "Convert Quote To Order",
        "tags": [
          "Quote API"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/convertquoterequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/ConvertToOrder' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"orderDate\": \"2020-02-13T12:08:09.31\",\r\n    \"accountId\": 223,\r\n    \"contractId\": null,\r\n    \"specialRequirements\": [],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"code\": \"PO\",\r\n            \"type\": \"PO\",\r\n            \"value\": \"8525\"\r\n        }\r\n    ],\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"Reason\",\r\n            \"value\": \"BRNCH FLT\\\/MAX CAPACTY\"\r\n        }\r\n    ],\r\n    \"orderContactInformations\": [\r\n        {\r\n            \"firstName\": \"TestData\",\r\n            \"lastName\": \"Lname\",\r\n            \"email\": \"devcustomer@gmail.com(opens in new tab)\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"6606546565\"\r\n                }\r\n            ],\r\n            \"title\": \"Mr\",\r\n            \"isPrimary\": true\r\n        }\r\n    ],\r\n    \"orderServices\": [\r\n        {\r\n            \"code\": \"12151\",\r\n            \"name\": \"Room of Choice Delivery\",\r\n            \"description\": \"Base delivery charge for IKEA.\",\r\n            \"quantity\": 1,\r\n            \"unitofMeasure\": \"Items Hauled Away\"\r\n        }\r\n    ],\r\n    \"orderDocuments\": [\r\n        {\r\n            \"type\": \"30\",\r\n            \"name\": \"28-FEB-2019.xlsx\",\r\n            \"key\": \"0000040VD7CES000000000\"\r\n        }\r\n    ],\r\n    \"crossSellOrderNumber\": \"\",\r\n    \"salesReps\": [\r\n        {\r\n            \"firstName\": \"TestData\",\r\n            \"lastName\": \"Lname\",\r\n            \"email\": \"devcustomer@gmail.com(opens in new tab)\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"6606546565\"\r\n                }\r\n            ],\r\n            \"title\": \"\",\r\n            \"isPrimary\": false\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"locationId\": \"TESTCH30\",\r\n                \"locationName\": \"Test 1\",\r\n                \"locationType\": \"Warehouse\",\r\n                \"addressLine1\": \"1800 North Clybourn Avenue\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"Chicago\",\r\n                \"countryCode\": \"USA\",\r\n                \"geoCodes\": {\r\n                    \"longitude\": null,\r\n                    \"latitude\": null,\r\n                    \"s2cellId\": null\r\n                },\r\n                \"stateCode\": \"IL\",\r\n                \"zipCode\": \"60606\",\r\n                \"region\": null,\r\n                \"utcOffset\": \"-04:00:00\"\r\n            },\r\n            \"scheduledTimeFrom\": \"2020-11-25T21:23:53\",\r\n            \"sequenceNo\": 1,\r\n            \"scheduledTimeTo\": null,\r\n            \"type\": \"PICKUP\",\r\n            \"isAppointmentRequired\": false,\r\n            \"isAppointmentConfirmed\": false,\r\n            \"specialRequirements\": [\r\n                {\r\n                    \"type\": \"LIFTGATE\",\r\n                    \"value\": \"1\"\r\n                }\r\n            ],\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"PO\",\r\n                    \"type\": \"PO\",\r\n                    \"value\": \"8525\"\r\n                }\r\n            ],\r\n            \"note\": [\r\n                {\r\n                    \"type\": \"Reason\",\r\n                    \"value\": \"BRNCH FLT\\\/MAX CAPACTY\"\r\n                }\r\n            ],\r\n            \"stopContactInformations\": [\r\n                {\r\n                    \"firstName\": \"TestData\",\r\n                    \"lastName\": \"Lname\",\r\n                    \"email\": \"devcustomer@gmail.com\",\r\n                    \"phoneNumbers\": [\r\n                        {\r\n                            \"type\": \"Mobile\",\r\n                            \"number\": \"7894561230\"\r\n                        }\r\n                    ],\r\n                    \"title\": \"\",\r\n                    \"isPrimary\": true\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"locationId\": \"TESTNOO8\",\r\n                \"locationName\": \"Test 2\",\r\n                \"locationType\": \"Warehouse\",\r\n                \"addressLine1\": \"North Ridgeville Soccer Complex\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"North Ridgeville\",\r\n                \"countryCode\": \"USA\",\r\n                \"geoCodes\": {\r\n                    \"longitude\": null,\r\n                    \"latitude\": null,\r\n                    \"s2cellId\": null\r\n                },\r\n                \"stateCode\": \"OH\",\r\n                \"zipCode\": \"44039\",\r\n                \"region\": null,\r\n                \"utcOffset\": \"-04:00:00\"\r\n            },\r\n            \"scheduledTimeFrom\": \"2020-12-14T22:23:53\",\r\n            \"sequenceNo\": 2,\r\n            \"scheduledTimeTo\": null,\r\n            \"type\": \"DELIVERY\",\r\n            \"isAppointmentRequired\": false,\r\n            \"isAppointmentConfirmed\": false,\r\n            \"specialRequirements\": [\r\n                {\r\n                    \"type\": \"LIFTGATE\",\r\n                    \"value\": \"1\"\r\n                }\r\n            ],\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"PO\",\r\n                    \"type\": \"PO\",\r\n                    \"value\": \"8525\"\r\n                }\r\n            ],\r\n            \"note\": [\r\n                {\r\n                    \"type\": \"Reason\",\r\n                    \"value\": \"BRNCH FLT\\\/MAX CAPACTY\"\r\n                }\r\n            ],\r\n            \"stopContactInformations\": [\r\n                {\r\n                    \"firstName\": \"TestData \",\r\n                    \"lastName\": \"SO\",\r\n                    \"email\": \"devcustomer@gmail.com\",\r\n                    \"phoneNumbers\": [\r\n                        {\r\n                            \"type\": \"Mobile\",\r\n                            \"number\": \"3312244433\"\r\n                        }\r\n                    ],\r\n                    \"title\": \"\",\r\n                    \"isPrimary\": true\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"transportationMode\": \"TL\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"OTHER\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 15,\r\n            \"unitTypeCode\": \"PLTS\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 4000,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 4000,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"temperatureInformation\": {\r\n                \"high\": null,\r\n                \"low\": null,\r\n                \"highUom\": null,\r\n                \"lowUom\": null\r\n            },\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": null,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"isOversized\": null,\r\n            \"isStackable\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"AN\",\r\n                    \"type\": \"AN\",\r\n                    \"value\": \"8525 - GRANDE PRAIRIE PRO\"\r\n                }\r\n            ],\r\n            \"itemNotes\": [\r\n                {\r\n                    \"type\": \"Reason\",\r\n                    \"value\": \"BRNCH FLT\\\/MAX CAPACTY\"\r\n                }\r\n            ],\r\n            \"itemServices\": [\r\n                {\r\n                    \"code\": \"12151\",\r\n                    \"name\": \"Room of Choice Delivery\",\r\n                    \"description\": \"Base delivery charge for IKEA.\",\r\n                    \"quantity\": 1,\r\n                    \"unitofMeasure\": \"Items Hauled Away\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isPartOfConsolidatedShipment\": false,\r\n    \"ordersOnConsolidatedShipment\": 1,\r\n    \"isExpedited\": false,\r\n    \"isXpoManaged\": true,\r\n    \"paymentCode\": \"PPD\",\r\n    \"equipmentTypeCode\": \"DT\",\r\n    \"equipmentCategoryCode\": \"VN\",\r\n    \"quoteId\": \"0000183774\",\r\n    \"invoiceDate\": null,\r\n    \"invoiceNumber\": null,\r\n    \"applicationSource\": \"GPAPI\",\r\n    \"emailBol\": true,\r\n    \"partnerIdentifierCode\": \"2-1-HEATDEIA\"\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n    \\\"orderDate\\\": \\\"2020-02-13T12:08:09.31\\\",\\r\\n    \\\"accountId\\\": 223,\\r\\n    \\\"contractId\\\": null,\\r\\n    \\\"specialRequirements\\\": [],\\r\\n    \\\"orderReferenceNumbers\\\": [\\r\\n        {\\r\\n            \\\"code\\\": \\\"PO\\\",\\r\\n            \\\"type\\\": \\\"PO\\\",\\r\\n            \\\"value\\\": \\\"8525\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderNotes\\\": [\\r\\n        {\\r\\n            \\\"type\\\": \\\"Reason\\\",\\r\\n            \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderContactInformations\\\": [\\r\\n        {\\r\\n            \\\"firstName\\\": \\\"TestData\\\",\\r\\n            \\\"lastName\\\": \\\"Lname\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com(opens in new tab)\\\",\\r\\n            \\\"phoneNumbers\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Mobile\\\",\\r\\n                    \\\"number\\\": \\\"6606546565\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"Mr\\\",\\r\\n            \\\"isPrimary\\\": true\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderServices\\\": [\\r\\n        {\\r\\n            \\\"code\\\": \\\"12151\\\",\\r\\n            \\\"name\\\": \\\"Room of Choice Delivery\\\",\\r\\n            \\\"description\\\": \\\"Base delivery charge for IKEA.\\\",\\r\\n            \\\"quantity\\\": 1,\\r\\n            \\\"unitofMeasure\\\": \\\"Items Hauled Away\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderDocuments\\\": [\\r\\n        {\\r\\n            \\\"type\\\": \\\"30\\\",\\r\\n            \\\"name\\\": \\\"28-FEB-2019.xlsx\\\",\\r\\n            \\\"key\\\": \\\"0000040VD7CES000000000\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"crossSellOrderNumber\\\": \\\"\\\",\\r\\n    \\\"salesReps\\\": [\\r\\n        {\\r\\n            \\\"firstName\\\": \\\"TestData\\\",\\r\\n            \\\"lastName\\\": \\\"Lname\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com(opens in new tab)\\\",\\r\\n            \\\"phoneNumbers\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Mobile\\\",\\r\\n                    \\\"number\\\": \\\"6606546565\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"\\\",\\r\\n            \\\"isPrimary\\\": false\\r\\n        }\\r\\n    ],\\r\\n    \\\"stops\\\": [\\r\\n        {\\r\\n            \\\"addressInformation\\\": {\\r\\n                \\\"locationId\\\": \\\"TESTCH30\\\",\\r\\n                \\\"locationName\\\": \\\"Test 1\\\",\\r\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\r\\n                \\\"addressLine1\\\": \\\"1800 North Clybourn Avenue\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"Chicago\\\",\\r\\n                \\\"countryCode\\\": \\\"USA\\\",\\r\\n                \\\"geoCodes\\\": {\\r\\n                    \\\"longitude\\\": null,\\r\\n                    \\\"latitude\\\": null,\\r\\n                    \\\"s2cellId\\\": null\\r\\n                },\\r\\n                \\\"stateCode\\\": \\\"IL\\\",\\r\\n                \\\"zipCode\\\": \\\"60606\\\",\\r\\n                \\\"region\\\": null,\\r\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\"\\r\\n            },\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-11-25T21:23:53\\\",\\r\\n            \\\"sequenceNo\\\": 1,\\r\\n            \\\"scheduledTimeTo\\\": null,\\r\\n            \\\"type\\\": \\\"PICKUP\\\",\\r\\n            \\\"isAppointmentRequired\\\": false,\\r\\n            \\\"isAppointmentConfirmed\\\": false,\\r\\n            \\\"specialRequirements\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"LIFTGATE\\\",\\r\\n                    \\\"value\\\": \\\"1\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"PO\\\",\\r\\n                    \\\"type\\\": \\\"PO\\\",\\r\\n                    \\\"value\\\": \\\"8525\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [\\r\\n                {\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [\\r\\n                        {\\r\\n                            \\\"type\\\": \\\"Mobile\\\",\\r\\n                            \\\"number\\\": \\\"7894561230\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": true\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"addressInformation\\\": {\\r\\n                \\\"locationId\\\": \\\"TESTNOO8\\\",\\r\\n                \\\"locationName\\\": \\\"Test 2\\\",\\r\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\r\\n                \\\"addressLine1\\\": \\\"North Ridgeville Soccer Complex\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"North Ridgeville\\\",\\r\\n                \\\"countryCode\\\": \\\"USA\\\",\\r\\n                \\\"geoCodes\\\": {\\r\\n                    \\\"longitude\\\": null,\\r\\n                    \\\"latitude\\\": null,\\r\\n                    \\\"s2cellId\\\": null\\r\\n                },\\r\\n                \\\"stateCode\\\": \\\"OH\\\",\\r\\n                \\\"zipCode\\\": \\\"44039\\\",\\r\\n                \\\"region\\\": null,\\r\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\"\\r\\n            },\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-12-14T22:23:53\\\",\\r\\n            \\\"sequenceNo\\\": 2,\\r\\n            \\\"scheduledTimeTo\\\": null,\\r\\n            \\\"type\\\": \\\"DELIVERY\\\",\\r\\n            \\\"isAppointmentRequired\\\": false,\\r\\n            \\\"isAppointmentConfirmed\\\": false,\\r\\n            \\\"specialRequirements\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"LIFTGATE\\\",\\r\\n                    \\\"value\\\": \\\"1\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"PO\\\",\\r\\n                    \\\"type\\\": \\\"PO\\\",\\r\\n                    \\\"value\\\": \\\"8525\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [\\r\\n                {\\r\\n                    \\\"firstName\\\": \\\"TestData \\\",\\r\\n                    \\\"lastName\\\": \\\"SO\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [\\r\\n                        {\\r\\n                            \\\"type\\\": \\\"Mobile\\\",\\r\\n                            \\\"number\\\": \\\"3312244433\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": true\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"requestedDeliveryDate\\\": \\\"2020-02-27T15:00:00\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"items\\\": [\\r\\n        {\\r\\n            \\\"itemCode\\\": \\\"OTHER\\\",\\r\\n            \\\"itemNumber\\\": \\\"100056006\\\",\\r\\n            \\\"itemDescription\\\": \\\"CONCRETE BUCKET 1\\\\\/2 YD\\\",\\r\\n            \\\"units\\\": 15,\\r\\n            \\\"unitTypeCode\\\": \\\"PLTS\\\",\\r\\n            \\\"packageUnits\\\": 2,\\r\\n            \\\"packageTypeCode\\\": \\\"BAG\\\",\\r\\n            \\\"weight\\\": 4000,\\r\\n            \\\"weightUomCode\\\": \\\"LB\\\",\\r\\n            \\\"height\\\": 99.998999999999995225152815692126750946044921875,\\r\\n            \\\"heightUomCode\\\": \\\"IN\\\",\\r\\n            \\\"length\\\": 99,\\r\\n            \\\"lengthUomCode\\\": \\\"IN\\\",\\r\\n            \\\"width\\\": 150,\\r\\n            \\\"widthUomCode\\\": \\\"IN\\\",\\r\\n            \\\"declaredValue\\\": 4000,\\r\\n            \\\"declaredValueCurrencyCode\\\": \\\"USD\\\",\\r\\n            \\\"volume\\\": 868.0385999999999739884515292942523956298828125,\\r\\n            \\\"volumeUomCode\\\": \\\"CUFT\\\",\\r\\n            \\\"itemPrice\\\": 20.5,\\r\\n            \\\"itemPriceCurrencyCode\\\": \\\"USD\\\",\\r\\n            \\\"isTemperatureControlled\\\": false,\\r\\n            \\\"temperatureInformation\\\": {\\r\\n                \\\"high\\\": null,\\r\\n                \\\"low\\\": null,\\r\\n                \\\"highUom\\\": null,\\r\\n                \\\"lowUom\\\": null\\r\\n            },\\r\\n            \\\"isHazmat\\\": false,\\r\\n            \\\"hazardousItemInfo\\\": {\\r\\n                \\\"unnumber\\\": 0,\\r\\n                \\\"packingGroup\\\": null,\\r\\n                \\\"receptacleSize\\\": 0,\\r\\n                \\\"hazardousClass\\\": null,\\r\\n                \\\"numberofReceptacles\\\": 0,\\r\\n                \\\"unitofMeasure\\\": null,\\r\\n                \\\"containerType\\\": null,\\r\\n                \\\"hazardousDescription\\\": null,\\r\\n                \\\"hazardousPhoneNumber\\\": null,\\r\\n                \\\"shippingName\\\": null\\r\\n            },\\r\\n            \\\"htscode\\\": null,\\r\\n            \\\"sku\\\": \\\"Sku00001\\\",\\r\\n            \\\"purchaseOrderNumber\\\": null,\\r\\n            \\\"isOversized\\\": null,\\r\\n            \\\"isStackable\\\": null,\\r\\n            \\\"itemReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"AN\\\",\\r\\n                    \\\"type\\\": \\\"AN\\\",\\r\\n                    \\\"value\\\": \\\"8525 - GRANDE PRAIRIE PRO\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"itemNotes\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"itemServices\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"12151\\\",\\r\\n                    \\\"name\\\": \\\"Room of Choice Delivery\\\",\\r\\n                    \\\"description\\\": \\\"Base delivery charge for IKEA.\\\",\\r\\n                    \\\"quantity\\\": 1,\\r\\n                    \\\"unitofMeasure\\\": \\\"Items Hauled Away\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"isPartOfConsolidatedShipment\\\": false,\\r\\n    \\\"ordersOnConsolidatedShipment\\\": 1,\\r\\n    \\\"isExpedited\\\": false,\\r\\n    \\\"isXpoManaged\\\": true,\\r\\n    \\\"paymentCode\\\": \\\"PPD\\\",\\r\\n    \\\"equipmentTypeCode\\\": \\\"DT\\\",\\r\\n    \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\r\\n    \\\"quoteId\\\": \\\"0000183774\\\",\\r\\n    \\\"invoiceDate\\\": null,\\r\\n    \\\"invoiceNumber\\\": null,\\r\\n    \\\"applicationSource\\\": \\\"GPAPI\\\",\\r\\n    \\\"emailBol\\\": true,\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-HEATDEIA\\\"\\r\\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/ConvertToOrder\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/ConvertToOrder',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\"orderDate\":\"2020-02-13T12:08:09.31\",\"accountId\":223,\"contractId\":null,\"specialRequirements\":[],\"orderReferenceNumbers\":[{\"code\":\"PO\",\"type\":\"PO\",\"value\":\"8525\"}],\"orderNotes\":[{\"type\":\"Reason\",\"value\":\"BRNCH FLT\/MAX CAPACTY\"}],\"orderContactInformations\":[{\"firstName\":\"TestData\",\"lastName\":\"Lname\",\"email\":\"devcustomer@gmail.com(opens in new tab)\",\"phoneNumbers\":[{\"type\":\"Mobile\",\"number\":\"6606546565\"}],\"title\":\"Mr\",\"isPrimary\":true}],\"orderServices\":[{\"code\":\"12151\",\"name\":\"Room of Choice Delivery\",\"description\":\"Base delivery charge for IKEA.\",\"quantity\":1,\"unitofMeasure\":\"Items Hauled Away\"}],\"orderDocuments\":[{\"type\":\"30\",\"name\":\"28-FEB-2019.xlsx\",\"key\":\"0000040VD7CES000000000\"}],\"crossSellOrderNumber\":\"\",\"salesReps\":[{\"firstName\":\"TestData\",\"lastName\":\"Lname\",\"email\":\"devcustomer@gmail.com(opens in new tab)\",\"phoneNumbers\":[{\"type\":\"Mobile\",\"number\":\"6606546565\"}],\"title\":\"\",\"isPrimary\":false}],\"stops\":[{\"addressInformation\":{\"locationId\":\"TESTCH30\",\"locationName\":\"Test 1\",\"locationType\":\"Warehouse\",\"addressLine1\":\"1800 North Clybourn Avenue\",\"addressLine2\":\"\",\"cityName\":\"Chicago\",\"countryCode\":\"USA\",\"geoCodes\":{\"longitude\":null,\"latitude\":null,\"s2cellId\":null},\"stateCode\":\"IL\",\"zipCode\":\"60606\",\"region\":null,\"utcOffset\":\"-04:00:00\"},\"scheduledTimeFrom\":\"2020-11-25T21:23:53\",\"sequenceNo\":1,\"scheduledTimeTo\":null,\"type\":\"PICKUP\",\"isAppointmentRequired\":false,\"isAppointmentConfirmed\":false,\"specialRequirements\":[{\"type\":\"LIFTGATE\",\"value\":\"1\"}],\"stopReferenceNumbers\":[{\"code\":\"PO\",\"type\":\"PO\",\"value\":\"8525\"}],\"note\":[{\"type\":\"Reason\",\"value\":\"BRNCH FLT\/MAX CAPACTY\"}],\"stopContactInformations\":[{\"firstName\":\"TestData\",\"lastName\":\"Lname\",\"email\":\"devcustomer@gmail.com\",\"phoneNumbers\":[{\"type\":\"Mobile\",\"number\":\"7894561230\"}],\"title\":\"\",\"isPrimary\":true}]},{\"addressInformation\":{\"locationId\":\"TESTNOO8\",\"locationName\":\"Test 2\",\"locationType\":\"Warehouse\",\"addressLine1\":\"North Ridgeville Soccer Complex\",\"addressLine2\":\"\",\"cityName\":\"North Ridgeville\",\"countryCode\":\"USA\",\"geoCodes\":{\"longitude\":null,\"latitude\":null,\"s2cellId\":null},\"stateCode\":\"OH\",\"zipCode\":\"44039\",\"region\":null,\"utcOffset\":\"-04:00:00\"},\"scheduledTimeFrom\":\"2020-12-14T22:23:53\",\"sequenceNo\":2,\"scheduledTimeTo\":null,\"type\":\"DELIVERY\",\"isAppointmentRequired\":false,\"isAppointmentConfirmed\":false,\"specialRequirements\":[{\"type\":\"LIFTGATE\",\"value\":\"1\"}],\"stopReferenceNumbers\":[{\"code\":\"PO\",\"type\":\"PO\",\"value\":\"8525\"}],\"note\":[{\"type\":\"Reason\",\"value\":\"BRNCH FLT\/MAX CAPACTY\"}],\"stopContactInformations\":[{\"firstName\":\"TestData \",\"lastName\":\"SO\",\"email\":\"devcustomer@gmail.com\",\"phoneNumbers\":[{\"type\":\"Mobile\",\"number\":\"3312244433\"}],\"title\":\"\",\"isPrimary\":true}]}],\"requestedDeliveryDate\":\"2020-02-27T15:00:00\",\"transportationMode\":\"TL\",\"items\":[{\"itemCode\":\"OTHER\",\"itemNumber\":\"100056006\",\"itemDescription\":\"CONCRETE BUCKET 1\/2 YD\",\"units\":15,\"unitTypeCode\":\"PLTS\",\"packageUnits\":2,\"packageTypeCode\":\"BAG\",\"weight\":4000,\"weightUomCode\":\"LB\",\"height\":99.999,\"heightUomCode\":\"IN\",\"length\":99,\"lengthUomCode\":\"IN\",\"width\":150,\"widthUomCode\":\"IN\",\"declaredValue\":4000,\"declaredValueCurrencyCode\":\"USD\",\"volume\":868.0386,\"volumeUomCode\":\"CUFT\",\"itemPrice\":20.5,\"itemPriceCurrencyCode\":\"USD\",\"isTemperatureControlled\":false,\"temperatureInformation\":{\"high\":null,\"low\":null,\"highUom\":null,\"lowUom\":null},\"isHazmat\":false,\"hazardousItemInfo\":{\"unnumber\":0,\"packingGroup\":null,\"receptacleSize\":0,\"hazardousClass\":null,\"numberofReceptacles\":0,\"unitofMeasure\":null,\"containerType\":null,\"hazardousDescription\":null,\"hazardousPhoneNumber\":null,\"shippingName\":null},\"htscode\":null,\"sku\":\"Sku00001\",\"purchaseOrderNumber\":null,\"isOversized\":null,\"isStackable\":null,\"itemReferenceNumbers\":[{\"code\":\"AN\",\"type\":\"AN\",\"value\":\"8525 - GRANDE PRAIRIE PRO\"}],\"itemNotes\":[{\"type\":\"Reason\",\"value\":\"BRNCH FLT\/MAX CAPACTY\"}],\"itemServices\":[{\"code\":\"12151\",\"name\":\"Room of Choice Delivery\",\"description\":\"Base delivery charge for IKEA.\",\"quantity\":1,\"unitofMeasure\":\"Items Hauled Away\"}]}],\"isPartOfConsolidatedShipment\":false,\"ordersOnConsolidatedShipment\":1,\"isExpedited\":false,\"isXpoManaged\":true,\"paymentCode\":\"PPD\",\"equipmentTypeCode\":\"DT\",\"equipmentCategoryCode\":\"VN\",\"quoteId\":\"0000183774\",\"invoiceDate\":null,\"invoiceNumber\":null,\"applicationSource\":\"GPAPI\",\"emailBol\":true,\"partnerIdentifierCode\":\"2-1-HEATDEIA\"})\r\n\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/ConvertToOrder\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\\r\\n    \\\"orderDate\\\": \\\"2020-02-13T12:08:09.31\\\",\\r\\n    \\\"accountId\\\": 223,\\r\\n    \\\"contractId\\\": null,\\r\\n    \\\"specialRequirements\\\": [],\\r\\n    \\\"orderReferenceNumbers\\\": [\\r\\n        {\\r\\n            \\\"code\\\": \\\"PO\\\",\\r\\n            \\\"type\\\": \\\"PO\\\",\\r\\n            \\\"value\\\": \\\"8525\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderNotes\\\": [\\r\\n        {\\r\\n            \\\"type\\\": \\\"Reason\\\",\\r\\n            \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderContactInformations\\\": [\\r\\n        {\\r\\n            \\\"firstName\\\": \\\"TestData\\\",\\r\\n            \\\"lastName\\\": \\\"Lname\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com(opens in new tab)\\\",\\r\\n            \\\"phoneNumbers\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Mobile\\\",\\r\\n                    \\\"number\\\": \\\"6606546565\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"Mr\\\",\\r\\n            \\\"isPrimary\\\": true\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderServices\\\": [\\r\\n        {\\r\\n            \\\"code\\\": \\\"12151\\\",\\r\\n            \\\"name\\\": \\\"Room of Choice Delivery\\\",\\r\\n            \\\"description\\\": \\\"Base delivery charge for IKEA.\\\",\\r\\n            \\\"quantity\\\": 1,\\r\\n            \\\"unitofMeasure\\\": \\\"Items Hauled Away\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"orderDocuments\\\": [\\r\\n        {\\r\\n            \\\"type\\\": \\\"30\\\",\\r\\n            \\\"name\\\": \\\"28-FEB-2019.xlsx\\\",\\r\\n            \\\"key\\\": \\\"0000040VD7CES000000000\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"crossSellOrderNumber\\\": \\\"\\\",\\r\\n    \\\"salesReps\\\": [\\r\\n        {\\r\\n            \\\"firstName\\\": \\\"TestData\\\",\\r\\n            \\\"lastName\\\": \\\"Lname\\\",\\r\\n            \\\"email\\\": \\\"devcustomer@gmail.com(opens in new tab)\\\",\\r\\n            \\\"phoneNumbers\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Mobile\\\",\\r\\n                    \\\"number\\\": \\\"6606546565\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"title\\\": \\\"\\\",\\r\\n            \\\"isPrimary\\\": false\\r\\n        }\\r\\n    ],\\r\\n    \\\"stops\\\": [\\r\\n        {\\r\\n            \\\"addressInformation\\\": {\\r\\n                \\\"locationId\\\": \\\"TESTCH30\\\",\\r\\n                \\\"locationName\\\": \\\"Test 1\\\",\\r\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\r\\n                \\\"addressLine1\\\": \\\"1800 North Clybourn Avenue\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"Chicago\\\",\\r\\n                \\\"countryCode\\\": \\\"USA\\\",\\r\\n                \\\"geoCodes\\\": {\\r\\n                    \\\"longitude\\\": null,\\r\\n                    \\\"latitude\\\": null,\\r\\n                    \\\"s2cellId\\\": null\\r\\n                },\\r\\n                \\\"stateCode\\\": \\\"IL\\\",\\r\\n                \\\"zipCode\\\": \\\"60606\\\",\\r\\n                \\\"region\\\": null,\\r\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\"\\r\\n            },\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-11-25T21:23:53\\\",\\r\\n            \\\"sequenceNo\\\": 1,\\r\\n            \\\"scheduledTimeTo\\\": null,\\r\\n            \\\"type\\\": \\\"PICKUP\\\",\\r\\n            \\\"isAppointmentRequired\\\": false,\\r\\n            \\\"isAppointmentConfirmed\\\": false,\\r\\n            \\\"specialRequirements\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"LIFTGATE\\\",\\r\\n                    \\\"value\\\": \\\"1\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"PO\\\",\\r\\n                    \\\"type\\\": \\\"PO\\\",\\r\\n                    \\\"value\\\": \\\"8525\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [\\r\\n                {\\r\\n                    \\\"firstName\\\": \\\"TestData\\\",\\r\\n                    \\\"lastName\\\": \\\"Lname\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [\\r\\n                        {\\r\\n                            \\\"type\\\": \\\"Mobile\\\",\\r\\n                            \\\"number\\\": \\\"7894561230\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": true\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"addressInformation\\\": {\\r\\n                \\\"locationId\\\": \\\"TESTNOO8\\\",\\r\\n                \\\"locationName\\\": \\\"Test 2\\\",\\r\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\r\\n                \\\"addressLine1\\\": \\\"North Ridgeville Soccer Complex\\\",\\r\\n                \\\"addressLine2\\\": \\\"\\\",\\r\\n                \\\"cityName\\\": \\\"North Ridgeville\\\",\\r\\n                \\\"countryCode\\\": \\\"USA\\\",\\r\\n                \\\"geoCodes\\\": {\\r\\n                    \\\"longitude\\\": null,\\r\\n                    \\\"latitude\\\": null,\\r\\n                    \\\"s2cellId\\\": null\\r\\n                },\\r\\n                \\\"stateCode\\\": \\\"OH\\\",\\r\\n                \\\"zipCode\\\": \\\"44039\\\",\\r\\n                \\\"region\\\": null,\\r\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\"\\r\\n            },\\r\\n            \\\"scheduledTimeFrom\\\": \\\"2020-12-14T22:23:53\\\",\\r\\n            \\\"sequenceNo\\\": 2,\\r\\n            \\\"scheduledTimeTo\\\": null,\\r\\n            \\\"type\\\": \\\"DELIVERY\\\",\\r\\n            \\\"isAppointmentRequired\\\": false,\\r\\n            \\\"isAppointmentConfirmed\\\": false,\\r\\n            \\\"specialRequirements\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"LIFTGATE\\\",\\r\\n                    \\\"value\\\": \\\"1\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"PO\\\",\\r\\n                    \\\"type\\\": \\\"PO\\\",\\r\\n                    \\\"value\\\": \\\"8525\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"note\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"stopContactInformations\\\": [\\r\\n                {\\r\\n                    \\\"firstName\\\": \\\"TestData \\\",\\r\\n                    \\\"lastName\\\": \\\"SO\\\",\\r\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\r\\n                    \\\"phoneNumbers\\\": [\\r\\n                        {\\r\\n                            \\\"type\\\": \\\"Mobile\\\",\\r\\n                            \\\"number\\\": \\\"3312244433\\\"\\r\\n                        }\\r\\n                    ],\\r\\n                    \\\"title\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": true\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"requestedDeliveryDate\\\": \\\"2020-02-27T15:00:00\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"items\\\": [\\r\\n        {\\r\\n            \\\"itemCode\\\": \\\"OTHER\\\",\\r\\n            \\\"itemNumber\\\": \\\"100056006\\\",\\r\\n            \\\"itemDescription\\\": \\\"CONCRETE BUCKET 1\\\\\/2 YD\\\",\\r\\n            \\\"units\\\": 15,\\r\\n            \\\"unitTypeCode\\\": \\\"PLTS\\\",\\r\\n            \\\"packageUnits\\\": 2,\\r\\n            \\\"packageTypeCode\\\": \\\"BAG\\\",\\r\\n            \\\"weight\\\": 4000,\\r\\n            \\\"weightUomCode\\\": \\\"LB\\\",\\r\\n            \\\"height\\\": 99.998999999999995225152815692126750946044921875,\\r\\n            \\\"heightUomCode\\\": \\\"IN\\\",\\r\\n            \\\"length\\\": 99,\\r\\n            \\\"lengthUomCode\\\": \\\"IN\\\",\\r\\n            \\\"width\\\": 150,\\r\\n            \\\"widthUomCode\\\": \\\"IN\\\",\\r\\n            \\\"declaredValue\\\": 4000,\\r\\n            \\\"declaredValueCurrencyCode\\\": \\\"USD\\\",\\r\\n            \\\"volume\\\": 868.0385999999999739884515292942523956298828125,\\r\\n            \\\"volumeUomCode\\\": \\\"CUFT\\\",\\r\\n            \\\"itemPrice\\\": 20.5,\\r\\n            \\\"itemPriceCurrencyCode\\\": \\\"USD\\\",\\r\\n            \\\"isTemperatureControlled\\\": false,\\r\\n            \\\"temperatureInformation\\\": {\\r\\n                \\\"high\\\": null,\\r\\n                \\\"low\\\": null,\\r\\n                \\\"highUom\\\": null,\\r\\n                \\\"lowUom\\\": null\\r\\n            },\\r\\n            \\\"isHazmat\\\": false,\\r\\n            \\\"hazardousItemInfo\\\": {\\r\\n                \\\"unnumber\\\": 0,\\r\\n                \\\"packingGroup\\\": null,\\r\\n                \\\"receptacleSize\\\": 0,\\r\\n                \\\"hazardousClass\\\": null,\\r\\n                \\\"numberofReceptacles\\\": 0,\\r\\n                \\\"unitofMeasure\\\": null,\\r\\n                \\\"containerType\\\": null,\\r\\n                \\\"hazardousDescription\\\": null,\\r\\n                \\\"hazardousPhoneNumber\\\": null,\\r\\n                \\\"shippingName\\\": null\\r\\n            },\\r\\n            \\\"htscode\\\": null,\\r\\n            \\\"sku\\\": \\\"Sku00001\\\",\\r\\n            \\\"purchaseOrderNumber\\\": null,\\r\\n            \\\"isOversized\\\": null,\\r\\n            \\\"isStackable\\\": null,\\r\\n            \\\"itemReferenceNumbers\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"AN\\\",\\r\\n                    \\\"type\\\": \\\"AN\\\",\\r\\n                    \\\"value\\\": \\\"8525 - GRANDE PRAIRIE PRO\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"itemNotes\\\": [\\r\\n                {\\r\\n                    \\\"type\\\": \\\"Reason\\\",\\r\\n                    \\\"value\\\": \\\"BRNCH FLT\\\\\/MAX CAPACTY\\\"\\r\\n                }\\r\\n            ],\\r\\n            \\\"itemServices\\\": [\\r\\n                {\\r\\n                    \\\"code\\\": \\\"12151\\\",\\r\\n                    \\\"name\\\": \\\"Room of Choice Delivery\\\",\\r\\n                    \\\"description\\\": \\\"Base delivery charge for IKEA.\\\",\\r\\n                    \\\"quantity\\\": 1,\\r\\n                    \\\"unitofMeasure\\\": \\\"Items Hauled Away\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"isPartOfConsolidatedShipment\\\": false,\\r\\n    \\\"ordersOnConsolidatedShipment\\\": 1,\\r\\n    \\\"isExpedited\\\": false,\\r\\n    \\\"isXpoManaged\\\": true,\\r\\n    \\\"paymentCode\\\": \\\"PPD\\\",\\r\\n    \\\"equipmentTypeCode\\\": \\\"DT\\\",\\r\\n    \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\r\\n    \\\"quoteId\\\": \\\"0000183774\\\",\\r\\n    \\\"invoiceDate\\\": null,\\r\\n    \\\"invoiceNumber\\\": null,\\r\\n    \\\"applicationSource\\\": \\\"GPAPI\\\",\\r\\n    \\\"emailBol\\\": true,\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-HEATDEIA\\\"\\r\\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/convertquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/quotes/{masterQuoteId}": {
      "get": {
        "description": "Allows partner to get quote details by providing MasterQuoteId.\n\n User must provide valid API Key and token as header parameter and {masterQuoteId} as url path parameter to get Quote details.",
        "operationId": "Quote by Master Quote Id",
        "tags": [
          "Quote API"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "Master Quote Id.",
            "name": "{masterQuoteId}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957?\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/quotes/{masterQuoteId}/quote/{quoteId}": {
      "get": {
        "description": "Allows partner to get quote details by providing specific MasterQuoteId & QuoteId.\n\n User must provide valid API Key and token as header parameter and {masterQuoteId} & {quoteId} as url path parameter to get Quote details.",
        "operationId": "Quote by Master Quote Id & Quote Id",
        "tags": [
          "Quote API"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "Master Quote Id.",
            "name": "{masterQuoteId}",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "Quote Id.",
            "name": "{quoteId}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\/quote\/0000034834' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\/quote\/0000034834\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\/quote\/0000034834',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\/quote\/0000034834\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "jwt"
      }
    },
    "schemas": {
      "tokenrequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client Id as provided by XPO."
          },
          "client_secret": {
            "type": "string",
            "description": "Client Secret as provided by XPO."
          },
          "scope": {
            "type": "string",
            "description": "Scope as provided by XPO to access requested API."
          },
          "grant_type": {
            "type": "string",
            "description": "Grant Type, typical value is client_credentials."
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "scope",
          "grant_type"
        ],
        "example": {
          "client_id": "xpo-tran-boomi-test-app",
          "client_secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
          "scope": "xpo-rates-api",
          "grant_type": "client_credentials"
        }
      },
      "quoterequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/TLRequiredFields",
            "LTL": "#/components/schemas/LTLRequiredFields"
          }
        },
        "properties": {
          "partnerOrderCode": {
            "type": "string",
            "description": "Partner order unique identifier code."
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          },
          "equipmentCategoryCode": {
            "type": "string",
            "description": "Type of Equipment used to move your shipment, such as Dry Van, Flatbed etc."
          },
          "equipmentTypeCode": {
            "type": "string",
            "description": "Equipment type is the classification under equipment category, such as Dry Van 53, Dry Van 58 etc."
          },
          "transportationMode": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Mode of Transportation, accepted values are string of array as TL, LTL"
          },
          "additionalServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                }
              }
            },
            "description": "Additional services required for this quote."
          },
          "contactInformations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of contact person."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of contact person."
                },
                "email": {
                  "type": "string",
                  "description": "Email for communication."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title": {
                  "type": "string",
                  "description": "Title of contact person."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it the primary contact information?."
                }
              },
              "required": [ "firstName", "email", "phoneNumbers" ]
            },
            "description": "Contact Information for this Order."
          },
          "referenceNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "typeCode": {
                  "type": "string",
                  "description": "Reference Type code."
                },
                "value": {
                  "type": "string",
                  "description": "Actual value of reference code."
                }
              }
            },
            "description": "If customer has more than one reference number e.g. primary order number , secondary order number."
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this quote created by which source like API, XpoConnect, EDI etc.",
            "enum": [ "GPAPI", "XpoConnect", "EDI" ]
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "contactInformations",
          "applicationSource"
        ],
        "example": {
          "partnerOrderCode": "lks-202006021928",
          "partnerIdentifierCode": "2-1-BSTOBECA",
          "equipmentCategoryCode": "VN",
          "equipmentTypeCode": "V",
          "transportationMode": [ "LTL" ],
          "additionalServices": [
            {
              "code": "GUARANTEED"
            }
          ],
          "stops": [
            {
              "addressInformations": {
                "locationId": null,
                "locationName": "",
                "addressLine1": "",
                "addressLine2": "",
                "cityName": "North Ridgeville",
                "stateCode": "OH",
                "country": "USA",
                "zipCode": "44039"
              },
              "type": "Pickup",
              "scheduledTimeFrom": "2020-05-28T00:00:00-04:00",
              "scheduledTimeTo": "2020-05-30T00:00:00-04:00",
              "specialRequirement": [
                {
                  "code": "APPOINTMENT_REQUIRED"
                }
              ],
              "stopContactInformations": [
                {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": 1,
                      "number": "6606546565"
                    }
                  ],
                  "title": "",
                  "isPrimary": false
                }
              ],
              "note": {},
              "stopReferenceNumbers": [
                {
                  "typeCode": "",
                  "value": ""
                }
              ],
              "sequenceNo": 1
            },
            {
              "addressInformations": {
                "locationId": null,
                "locationName": "",
                "addressLine1": "",
                "addressLine2": "",
                "cityName": "Chicago",
                "stateCode": "IL",
                "country": "USA",
                "zipCode": "60606"
              },
              "type": "Delivery",
              "scheduledTimeFrom": "2020-05-28T00:00:00-04:00",
              "scheduledTimeTo": "2020-05-30T00:00:00-04:00",
              "specialRequirement": [
                {
                  "code": "APPOINTMENT_REQUIRED"
                }
              ],
              "stopContactInformations": [
                {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": 1,
                      "number": "6606546565"
                    }
                  ],
                  "title": "",
                  "isPrimary": false
                }
              ],
              "note": null,
              "stopReferenceNumbers": null,
              "sequenceNo": 2
            }
          ],
          "items": [
            {
              "productCode": "acetic acid",
              "units": 10,
              "unitTypeCode": "BAG",
              "packageUnits": 2,
              "packageTypeCode": "BOXS",
              "weight": 15,
              "weightUomCode": "LBS",
              "height": 12.0,
              "heightUomCode": "CM",
              "length": 14.0,
              "lengthUomCode": "CM",
              "width": 16.0,
              "widthUomCode": "CM",
              "isHazmat": false,
              "hazardousItemInfo": {
                "unNumber": "0",
                "packingGroup": "0",
                "receptacleSize": 0,
                "hazardousClass": "",
                "numberofReceptacles": 0,
                "unitofMeasure": "",
                "containerType": "",
                "hazardousDescription": "",
                "hazardousPhoneNumber": "",
                "shippingName": ""
              },
              "isTemperatureControlled": false,
              "temperatureInformation": {
                "high": 0,
                "low": 0,
                "highUom": "",
                "lowUom": ""
              },
              "sku": "",
              "itemDescription": "",
              "itemNumber": "",
              "nmfcCode": "",
              "class": "50",
              "declaredValueAmount": 4000.0
            }
          ],
          "contactInformations": [
            {
              "firstName": "Customer Admin",
              "lastName": "",
              "email": "devcustomer@gmail.com",
              "phoneNumbers": [
                {
                  "type": 1,
                  "number": "+15444454555"
                }
              ],
              "title": "",
              "isPrimary": true
            }
          ],
          "applicationSource": "GPAPI",
          "referenceNumbers": null
        }
      },
      "TLRequiredFields": {
        "allOf": [
          {
            "$ref": "#/components/schemas/quoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop."
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop."
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [ "LFD:Lift Gate Required Code ", "RSD:Residential Required Code" ],
                            "description": "Special requirement type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  },
                  "required": [
                    "addressInformations",
                    "type",
                    "sequenceNo"
                  ]
                },
                "description": "Stops information for this Quote including origin and destination."
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productCode": {
                      "type": "string",
                      "description": "Item's Product Code."
                    },
                    "itemDescription": {
                      "type": "string",
                      "description": "Item's description."
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "Item's number."
                    },
                    "units": {
                      "type": "integer",
                      "description": "Number of units."
                    },
                    "unitTypeCode": {
                      "type": "string",
                      "description": "Item's unit type."
                    },
                    "packageUnits": {
                      "type": "integer",
                      "description": "Number of packages."
                    },
                    "packageTypeCode": {
                      "type": "string",
                      "description": "Package type."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Item's weight."
                    },
                    "weightUomCode": {
                      "type": "string",
                      "description": "Weight- Unit of measure."
                    },
                    "height": {
                      "type": "number",
                      "description": "Item's height."
                    },
                    "heightUomCode": {
                      "type": "string",
                      "description": "Height- Unit of measure."
                    },
                    "length": {
                      "type": "number",
                      "description": "Item's length."
                    },
                    "lengthUomCode": {
                      "type": "string",
                      "description": "Length - Unit of measure."
                    },
                    "width": {
                      "type": "integer",
                      "description": "Item's width."
                    },
                    "widthUomCode": {
                      "type": "string",
                      "description": "Width - Unit of measure."
                    },
                    "isHazmat": {
                      "type": "boolean",
                      "description": "Whether item is hazardous or not."
                    },
                    "hazardousItemInfo": {
                      "type": "object",
                      "properties": {
                        "unNumber": {
                          "type": "integer",
                          "description": "Identification number to identify dangerous goods."
                        },
                        "packingGroup": {
                          "type": "integer",
                          "description": "Packaging group."
                        },
                        "receptacleSize": {
                          "type": "integer",
                          "description": "Receptacle size."
                        },
                        "hazardousClass": {
                          "type": "string",
                          "description": "Hazardous class."
                        },
                        "numberofReceptacles": {
                          "type": "integer",
                          "description": "Number of receptacles."
                        },
                        "unitofMeasure": {
                          "type": "string",
                          "description": "Unit of measure."

                        },
                        "containerType": {
                          "type": "string",
                          "description": "Container type."
                        },
                        "hazardousDescription": {
                          "type": "string",
                          "description": "Hazardous description."
                        },
                        "hazardousPhoneNumber": {
                          "type": "string",
                          "description": "Phone number."
                        },
                        "shippingName": {
                          "type": "string",
                          "description": "Shipping Name."
                        }
                      },
                      "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                    },
                    "isTemperatureControlled": {
                      "type": "boolean",
                      "description": "Whether item is temperature controlled or not."
                    },
                    "temperatureInformation": {
                      "type": "object",
                      "properties": {
                        "high": {
                          "type": "string",
                          "description": "High temperature."
                        },
                        "low": {
                          "type": "string",
                          "description": "Low temperature."
                        },
                        "highUom": {
                          "type": "string",
                          "description": "High temperature Unit of measure."
                        },
                        "lowUom": {
                          "type": "string",
                          "description": "Low temperature Unit of measure."
                        }
                      },
                      "description": "Temperature information of the Item."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                    },
                    "class": {
                      "type": "string",
                      "description": "This code represents product freight class.."
                    },
                    "nmfcCode": {
                      "type": "string",
                      "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                    },
                    "declaredValueAmount": {
                      "type": "number",
                      "description": "Item's declared amount value."
                    }
                  },
                  "required": [
                    "declaredValueAmount",
                    "weight"
                  ]
                },
                "description": "All item details of Quote."
              }
            },
            "required": [
              "stops",
              "items",
              "equipmentCategoryCode",
              "equipmentTypeCode"
            ]
          }
        ]
      },
      "LTLRequiredFields": {
        "allOf": [
          {
            "$ref": "#/components/schemas/quoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop."
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop."
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Special requirement type.",
                            "enum": [
                              "CHD: Church Required Code ",
                              "CSD: Construction Site Required Code",
                              "MLD: Military Required Code",
                              "MND: Mine Required Code",
                              "MID: Mini Storage Required Code",
                              "NYC: NYC Surcharge Required Code",
                              "APT: Appointment Required Code",
                              "LFD: Lift Gate Required Code",
                              "RSD: Residential Required Code",
                              "ID: Inside Pickup Required Code",
                              "SLD: School Required Code",
                              "DROPTRAILER: Drop Trailer Required Code"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  },
                  "required": [
                    "addressInformations",
                    "type",
                    "sequenceNo",
                    "scheduledTimeFrom",
                    "scheduledTimeTo"
                  ]
                },
                "description": "Stops information for this Quote including origin and destination."
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productCode": {
                      "type": "string",
                      "description": "Item's Product Code."
                    },
                    "itemDescription": {
                      "type": "string",
                      "description": "Item's description."
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "Item's number."
                    },
                    "units": {
                      "type": "integer",
                      "description": "Number of units."
                    },
                    "unitTypeCode": {
                      "type": "string",
                      "description": "Item's unit type."
                    },
                    "packageUnits": {
                      "type": "integer",
                      "description": "Number of packages."
                    },
                    "packageTypeCode": {
                      "type": "string",
                      "description": "Package type."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Item's weight."
                    },
                    "weightUomCode": {
                      "type": "string",
                      "description": "Weight- Unit of measure."
                    },
                    "height": {
                      "type": "number",
                      "description": "Item's height."
                    },
                    "heightUomCode": {
                      "type": "string",
                      "description": "Height- Unit of measure."
                    },
                    "length": {
                      "type": "number",
                      "description": "Item's length."
                    },
                    "lengthUomCode": {
                      "type": "string",
                      "description": "Length - Unit of measure."
                    },
                    "width": {
                      "type": "integer",
                      "description": "Item's width."
                    },
                    "widthUomCode": {
                      "type": "string",
                      "description": "Width - Unit of measure."
                    },
                    "isHazmat": {
                      "type": "boolean",
                      "description": "Whether item is hazardous or not."
                    },
                    "hazardousItemInfo": {
                      "type": "object",
                      "properties": {
                        "unNumber": {
                          "type": "integer",
                          "description": "Identification number to identify dangerous goods."
                        },
                        "packingGroup": {
                          "type": "integer",
                          "description": "Packaging group."
                        },
                        "receptacleSize": {
                          "type": "integer",
                          "description": "Receptacle size."
                        },
                        "hazardousClass": {
                          "type": "string",
                          "description": "Hazardous class."
                        },
                        "numberofReceptacles": {
                          "type": "integer",
                          "description": "Number of receptacles."
                        },
                        "unitofMeasure": {
                          "type": "string",
                          "description": "Unit of measure."

                        },
                        "containerType": {
                          "type": "string",
                          "description": "Container type."
                        },
                        "hazardousDescription": {
                          "type": "string",
                          "description": "Hazardous description."
                        },
                        "hazardousPhoneNumber": {
                          "type": "string",
                          "description": "Phone number."
                        },
                        "shippingName": {
                          "type": "string",
                          "description": "Shipping Name."
                        }
                      },
                      "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                    },
                    "isTemperatureControlled": {
                      "type": "boolean",
                      "description": "Whether item is temperature controlled or not."
                    },
                    "temperatureInformation": {
                      "type": "object",
                      "properties": {
                        "high": {
                          "type": "string",
                          "description": "High temperature."
                        },
                        "low": {
                          "type": "string",
                          "description": "Low temperature."
                        },
                        "highUom": {
                          "type": "string",
                          "description": "High temperature Unit of measure."
                        },
                        "lowUom": {
                          "type": "string",
                          "description": "Low temperature Unit of measure."
                        }
                      },
                      "description": "Temperature information of the Item."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                    },
                    "class": {
                      "type": "string",
                      "description": "This code represents product freight class.."
                    },
                    "nmfcCode": {
                      "type": "string",
                      "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                    },
                    "declaredValueAmount": {
                      "type": "number",
                      "description": "Item's declared amount value."
                    }
                  },
                  "required": [
                    "productCode",
                    "units",
                    "unitTypeCode",
                    "packageUnits",
                    "packageTypeCode",
                    "weight",
                    "weightUomCode",
                    "height",
                    "heightUomCode",
                    "width",
                    "widthUomCode",
                    "length",
                    "lengthUomCode"
                  ]
                },
                "description": "All item details of Quote."
              }
            },
            "required": [
              "stops",
              "items"
            ]
          }
        ]

      },
      "convertquoterequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/TLStops",
            "LTL": "#/components/schemas/LTLStops"
          }
        },
        "properties": {
          "orderId": {
            "type": "integer",
            "description": "Unique Identifier for Order. This is only applicable during Order edit."
          },
          "orderDate ": {
            "type": "string",
            "description": "Date which the order is placed,If order date is not provided, system will add the current date."
          },
          "accountId ": {
            "type": "integer",
            "description": "The identifier used for sub-accounts under a customer."
          },
          "orderNumber ": {
            "type": "string",
            "description": "Order's number to uniquely identify order."
          },
          "contractId ": {
            "type": "string",
            "description": "The identifier for the contract with the customer."
          },
          "orderReferenceNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Custom reference code."
                },
                "type": {
                  "type": "string",
                  "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                  "enum": [
                    "CP",
                    "CS",
                    "NON_OTM_USER_EMAIL",
                    "INCO_TERM",
                    "SHIPPING_SERVICE",
                    "SHIPPING_SERVICE",
                    "PUBLIC_CG",
                    "CG",
                    "NAMED_LOCATION",
                    "SHIPPER_PICKUP_NUM",
                    "CLIENT_REFERENCE",
                    "NON_MANAGED",
                    "ZWF_REPORTED",
                    "ZWF_STD_REASON",
                    "ZWF_XPD_REASON",
                    "ZWF_XPD",
                    "BUS_UNIT",
                    "PRO",
                    "SHIPPER_BOL",
                    "HOUSE_BOL",
                    "SEAL_NUMBER",
                    "OVERSIZE"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Actual value of reference code."
                }
              }
            },
            "description": "If customer has more than one reference number e.g. primary order number , secondary order number."
          },
          "orderNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Note's type.",
                  "enum": [ "GENERAL", "ORDER_DESCRIPTION" ]
                },
                "value": {
                  "type": "string",
                  "description": "Note's value."
                }
              }
            },
            "description": "Notes for this order as array values."
          },
          "orderContactInformations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of contact person."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of contact person."
                },
                "email": {
                  "type": "string",
                  "description": "Email for communication."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title,": {
                  "type": "string",
                  "description": "Title of contact person."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it the primary contact information?."
                }
              }
            },
            "description": "Contact Information for this order."
          },
          "additionalServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Service code."
                },
                "name": {
                  "type": "string",
                  "description": "Service name."
                },
                "description": {
                  "type": "string",
                  "description": "Service description."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Service quantity."
                },
                "unitOfMeasure,": {
                  "type": "string",
                  "description": "Unit of measure."
                }
              },
              "required": [
                "Code",
                "Name",
                "Description",
                "Quantity",
                "UnitofMeasure"
              ]
            },
            "description": "Additional service required for this order."
          },
          "orderDocuments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Document's type code."
                },
                "name": {
                  "type": "string",
                  "description": "Document's name."
                },
                "key": {
                  "type": "string",
                  "description": "Document's key generated from DMS after uploading the document."
                }
              }
            },
            "description": "Documents associated with this order."
          },
          "crossSellOrderNumber": {
            "type": "string",
            "description": "Related or complementary item order number."
          },
          "salesReps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of sales representative."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of sales representative."
                },
                "email": {
                  "type": "string",
                  "description": "Email of sales representative."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title": {
                  "type": "string",
                  "description": "Title of sales representative."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it primary sales representative?"
                }
              }
            },
            "description": "This object represents Sale's representative information."

          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemCode": {
                  "type": "string",
                  "description": "Item's Product Code."
                },
                "itemDescription": {
                  "type": "string",
                  "description": "Item's description."
                },
                "itemNumber": {
                  "type": "string",
                  "description": "Item's number."
                },
                "units": {
                  "type": "integer",
                  "description": "Number of units."
                },
                "unitTypeCode": {
                  "type": "string",
                  "description": "Item's unit type."
                },
                "packageUnits": {
                  "type": "integer",
                  "description": "Number of packages."
                },
                "packageTypeCode": {
                  "type": "string",
                  "description": "Package type."
                },
                "weight": {
                  "type": "integer",
                  "description": "Item's weight."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Weight- Unit of measure."
                },
                "height": {
                  "type": "number",
                  "description": "Item's height."
                },
                "heightUomCode": {
                  "type": "string",
                  "description": "Height- Unit of measure."
                },
                "length": {
                  "type": "number",
                  "description": "Item's length."
                },
                "lengthUomCode": {
                  "type": "string",
                  "description": "Length - Unit of measure."
                },
                "width": {
                  "type": "integer",
                  "description": "Item's width."
                },
                "widthUomCode": {
                  "type": "string",
                  "description": "Width - Unit of measure."
                },
                "isHazmat": {
                  "type": "boolean",
                  "description": "Whether item is hazardous or not."
                },
                "hazardousItemInfo": {
                  "type": "object",
                  "properties": {
                    "unNumber": {
                      "type": "integer",
                      "description": "Identification number to identify dangerous goods."
                    },
                    "packingGroup": {
                      "type": "integer",
                      "description": "Packaging group."
                    },
                    "receptacleSize": {
                      "type": "integer",
                      "description": "Receptacle size."
                    },
                    "hazardousClass": {
                      "type": "string",
                      "description": "Hazardous class."
                    },
                    "numberofReceptacles": {
                      "type": "integer",
                      "description": "Number of receptacles."
                    },
                    "unitofMeasure": {
                      "type": "string",
                      "description": "Unit of measure."

                    },
                    "containerType": {
                      "type": "string",
                      "description": "Container type."
                    },
                    "hazardousDescription": {
                      "type": "string",
                      "description": "Hazardous description."
                    },
                    "hazardousPhoneNumber": {
                      "type": "string",
                      "description": "Phone number."
                    },
                    "shippingName": {
                      "type": "string",
                      "description": "Shipping Name."
                    }
                  },
                  "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                },
                "htsCode": {
                  "type": "string",
                  "description": "HTS codes are used to classify and define internationally traded goods"
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "Purchase Order Number."
                },
                "isOversized": {
                  "type": "boolean",
                  "description": "Flag to represent, whether item is over sized or not."
                },
                "isStackable": {
                  "type": "boolean",
                  "description": "Flag to represent, item is stackable or not.."
                },
                "isTemperatureControlled": {
                  "type": "boolean",
                  "description": "Whether item is temperature controlled or not."
                },
                "temperatureInformation": {
                  "type": "object",
                  "properties": {
                    "high": {
                      "type": "string",
                      "description": "High temperature."
                    },
                    "low": {
                      "type": "string",
                      "description": "Low temperature."
                    },
                    "highUom": {
                      "type": "string",
                      "description": "High temperature Unit of measure."
                    },
                    "lowUom": {
                      "type": "string",
                      "description": "Low temperature Unit of measure."
                    }
                  },
                  "description": "Temperature information of the Item."
                },
                "sku": {
                  "type": "string",
                  "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                },
                "classCode": {
                  "type": "string",
                  "description": "This code represents product freight class.."
                },
                "nmfcCode": {
                  "type": "string",
                  "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                },
                "declaredValue": {
                  "type": "number",
                  "description": "Item's declared amount value."
                },
                "declaredValueCurrencyCode": {
                  "type": "string",
                  "description": "Item's declared value currency code."
                },
                "itemPrice": {
                  "type": "number",
                  "description": "Item's price value."
                },
                "itemPriceCurrencyCode": {
                  "type": "string",
                  "description": "Item's price currency code."
                },
                "itemServices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Service code."
                      },
                      "name": {
                        "type": "string",
                        "description": "Service name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Service description."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "Service quantity."
                      },
                      "unitOfMeasure,": {
                        "type": "string",
                        "description": "Unit of measure."
                      }
                    }
                  },
                  "description": "Additional service required for this Item."
                },
                "itemReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Custom reference code."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                        "enum": [
                          "CP",
                          "CS",
                          "NON_OTM_USER_EMAIL",
                          "INCO_TERM",
                          "SHIPPING_SERVICE",
                          "SHIPPING_SERVICE",
                          "PUBLIC_CG",
                          "CG",
                          "NAMED_LOCATION",
                          "SHIPPER_PICKUP_NUM",
                          "CLIENT_REFERENCE",
                          "NON_MANAGED",
                          "ZWF_REPORTED",
                          "ZWF_STD_REASON",
                          "ZWF_XPD_REASON",
                          "ZWF_XPD",
                          "BUS_UNIT",
                          "PRO",
                          "SHIPPER_BOL",
                          "HOUSE_BOL",
                          "SEAL_NUMBER",
                          "OVERSIZE"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  },
                  "description": "This object holds the collection of reference numbers associated with this items."
                },
                "itemNotes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Note's type.",
                        "enum": [ "GENERAL", "ORDER_DESCRIPTION" ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Note's value."
                      }
                    }
                  },
                  "description": "Notes for this item as array values."
                }
              },
              "required": [ "itemCode" ]
            },
            "description": "Item Details."
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "Requested delivery date of order."
          },
          "transportationMode": {
            "type": "string",
            "description": "Mode of Transportation.",
            "enum": [ "LTL", "TL" ]
          },
          "isPartOfConsolidatedShipment": {
            "type": "boolean",
            "description": "Whether this order is part of consolidated shipment or not."
          },
          "ordersOnConsolidatedShipment": {
            "type": "integer",
            "description": "Consolidated shipment."
          },
          "isExpedited": {
            "type": "boolean",
            "description": "Whether this order is an expedited delivery or not."
          },
          "isXpoManaged": {
            "type": "boolean",
            "description": "Whether this order is managed by XPO."
          },
          "paymentMethod": {
            "type": "string",
            "description": "Method of payment.",
            "enum": [ "COL", "PPD", "THIRDPARTY" ]
          },
          "equipmentTypeCode": {
            "type": "string",
            "description": "Equipment type is the classification under equipment category, such as Dry Van 53, Dry Van 58 etc."
          },
          "equipmentCategoryCode": {
            "type": "string",
            "description": "This field will represent type of equipment used to move your shipment, such as Dry Van, Flatbed etc."
          },
          "quoteId": {
            "type": "string",
            "description": "Quote id against submitted against this order."
          },
          "invoiceDate": {
            "type": "string",
            "description": "Order Invoice Date."
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Order Invoice numver."
          },
          "emailBOL": {
            "type": "boolean",
            "description": "Boolean flag to email the BOL of the shipment."
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this quote created by which source like API, XpoConnect, EDI etc.",
            "enum": [ "GPAPI", "XpoConnect", "EDI" ]
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "applicationSource",
          "quoteId"
        ],
        "example": {
          "orderDate": "2020-02-13T12:08:09.31",
          "accountId": 223,
          "contractId": null,
          "specialRequirements": [],
          "orderReferenceNumbers": [
            {
              "code": "PO",
              "type": "PO",
              "value": "8525"
            }
          ],
          "orderNotes": [
            {
              "type": "Reason",
              "value": "BRNCH FLT\/MAX CAPACTY"
            }
          ],
          "orderContactInformations": [
            {
              "firstName": "TestData",
              "lastName": "Lname",
              "email": "devcustomer@gmail.com(opens in new tab)",
              "phoneNumbers": [
                {
                  "type": "Mobile",
                  "number": "6606546565"
                }
              ],
              "title": "Mr",
              "isPrimary": true
            }
          ],
          "orderServices": [
            {
              "code": "12151",
              "name": "Room of Choice Delivery",
              "description": "Base delivery charge for IKEA.",
              "quantity": 1,
              "unitofMeasure": "Items Hauled Away"
            }
          ],
          "orderDocuments": [
            {
              "type": "30",
              "name": "28-FEB-2019.xlsx",
              "key": "0000040VD7CES000000000"
            }
          ],
          "crossSellOrderNumber": "",
          "salesReps": [
            {
              "firstName": "TestData",
              "lastName": "Lname",
              "email": "devcustomer@gmail.com(opens in new tab)",
              "phoneNumbers": [
                {
                  "type": "Mobile",
                  "number": "6606546565"
                }
              ],
              "title": "",
              "isPrimary": false
            }
          ],
          "stops": [
            {
              "addressInformation": {
                "locationId": "TESTCH30",
                "locationName": "Test 1",
                "locationType": "Warehouse",
                "addressLine1": "1800 North Clybourn Avenue",
                "addressLine2": "",
                "cityName": "Chicago",
                "countryCode": "USA",
                "geoCodes": {
                  "longitude": null,
                  "latitude": null,
                  "s2cellId": null
                },
                "stateCode": "IL",
                "zipCode": "60606",
                "region": null,
                "utcOffset": "-04:00:00"
              },
              "scheduledTimeFrom": "2020-11-25T21:23:53",
              "sequenceNo": 1,
              "scheduledTimeTo": null,
              "type": "PICKUP",
              "isAppointmentRequired": false,
              "isAppointmentConfirmed": false,
              "specialRequirements": [
                {
                  "type": "LIFTGATE",
                  "value": "1"
                }
              ],
              "stopReferenceNumbers": [
                {
                  "code": "PO",
                  "type": "PO",
                  "value": "8525"
                }
              ],
              "note": [
                {
                  "type": "Reason",
                  "value": "BRNCH FLT\/MAX CAPACTY"
                }
              ],
              "stopContactInformations": [
                {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "Mobile",
                      "number": "7894561230"
                    }
                  ],
                  "title": "",
                  "isPrimary": true
                }
              ]
            },
            {
              "addressInformation": {
                "locationId": "TESTNOO8",
                "locationName": "Test 2",
                "locationType": "Warehouse",
                "addressLine1": "North Ridgeville Soccer Complex",
                "addressLine2": "",
                "cityName": "North Ridgeville",
                "countryCode": "USA",
                "geoCodes": {
                  "longitude": null,
                  "latitude": null,
                  "s2cellId": null
                },
                "stateCode": "OH",
                "zipCode": "44039",
                "region": null,
                "utcOffset": "-04:00:00"
              },
              "scheduledTimeFrom": "2020-12-14T22:23:53",
              "sequenceNo": 2,
              "scheduledTimeTo": null,
              "type": "DELIVERY",
              "isAppointmentRequired": false,
              "isAppointmentConfirmed": false,
              "specialRequirements": [
                {
                  "type": "LIFTGATE",
                  "value": "1"
                }
              ],
              "stopReferenceNumbers": [
                {
                  "code": "PO",
                  "type": "PO",
                  "value": "8525"
                }
              ],
              "note": [
                {
                  "type": "Reason",
                  "value": "BRNCH FLT\/MAX CAPACTY"
                }
              ],
              "stopContactInformations": [
                {
                  "firstName": "TestData ",
                  "lastName": "SO",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "Mobile",
                      "number": "3312244433"
                    }
                  ],
                  "title": "",
                  "isPrimary": true
                }
              ]
            }
          ],
          "requestedDeliveryDate": "2020-02-27T15:00:00",
          "transportationMode": "TL",
          "items": [
            {
              "itemCode": "OTHER",
              "itemNumber": "100056006",
              "itemDescription": "CONCRETE BUCKET 1\/2 YD",
              "units": 15,
              "unitTypeCode": "PLTS",
              "packageUnits": 2,
              "packageTypeCode": "BAG",
              "weight": 4000,
              "weightUomCode": "LB",
              "height": 99.99,
              "heightUomCode": "IN",
              "length": 99,
              "lengthUomCode": "IN",
              "width": 150,
              "widthUomCode": "IN",
              "declaredValue": 4000,
              "declaredValueCurrencyCode": "USD",
              "volume": 868.03,
              "volumeUomCode": "CUFT",
              "itemPrice": 20.5,
              "itemPriceCurrencyCode": "USD",
              "isTemperatureControlled": false,
              "temperatureInformation": {
                "high": null,
                "low": null,
                "highUom": null,
                "lowUom": null
              },
              "isHazmat": false,
              "hazardousItemInfo": {
                "unnumber": 0,
                "packingGroup": null,
                "receptacleSize": 0,
                "hazardousClass": null,
                "numberofReceptacles": 0,
                "unitofMeasure": null,
                "containerType": null,
                "hazardousDescription": null,
                "hazardousPhoneNumber": null,
                "shippingName": null
              },
              "htscode": null,
              "sku": "Sku00001",
              "purchaseOrderNumber": null,
              "isOversized": null,
              "isStackable": null,
              "itemReferenceNumbers": [
                {
                  "code": "AN",
                  "type": "AN",
                  "value": "8525 - GRANDE PRAIRIE PRO"
                }
              ],
              "itemNotes": [
                {
                  "type": "Reason",
                  "value": "BRNCH FLT\/MAX CAPACTY"
                }
              ],
              "itemServices": [
                {
                  "code": "12151",
                  "name": "Room of Choice Delivery",
                  "description": "Base delivery charge for IKEA.",
                  "quantity": 1,
                  "unitofMeasure": "Items Hauled Away"
                }
              ]
            }
          ],
          "isPartOfConsolidatedShipment": false,
          "ordersOnConsolidatedShipment": 1,
          "isExpedited": false,
          "isXpoManaged": true,
          "paymentCode": "PPD",
          "equipmentTypeCode": "DT",
          "equipmentCategoryCode": "VN",
          "quoteId": "0000183774",
          "invoiceDate": null,
          "invoiceNumber": null,
          "applicationSource": "GPAPI",
          "emailBol": true,
          "partnerIdentifierCode": "2-1-HEATDEIA"
        }
      },
      "TLStops": {
        "allOf": [
          {
            "$ref": "#/components/schemas/convertquoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations ": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop."
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop."
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [ "LFD:Lift Gate Required Code ", "RSD:Residential Required Code" ],
                            "description": "Special requirement type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  }
                },
                "description": "Stops information for this Quote including origin and destination.",
                "required": [
                  "addressInformations",
                  "type"
                ]
              }
            }
          }
        ]
      },
      "LTLStops": {
        "allOf": [
          {
            "$ref": "#/components/schemas/convertquoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations ": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop."
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop."
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Special requirement type.",
                            "enum": [
                              "CHD: Church Required Code ",
                              "CSD: Construction Site Required Code",
                              "MLD: Military Required Code",
                              "MND: Mine Required Code",
                              "MID: Mini Storage Required Code",
                              "NYC: NYC Surcharge Required Code",
                              "APT: Appointment Required Code",
                              "LFD: Lift Gate Required Code",
                              "RSD: Residential Required Code",
                              "ID: Inside Pickup Required Code",
                              "SLD: School Required Code",
                              "DROPTRAILER: Drop Trailer Required Code"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  }
                },
                "description": "Stops information for this Quote including origin and destination.",
                "required": [
                  "addressInformations",
                  "type"
                ]
              }
            }
          }
        ]
      },
      "convertquoteresponse": {
        "properties": {
          "reRatedQuoteResponse": {
            "$ref": "#/components/schemas/commonquoteresponse"
          },
          "orderId": {
            "type": "integer",
            "description": "Order Id.",
            "example": "70661"
          },
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Message details.",
            "example": "Order created successfully!"
          },
          "context": {
            "type": "array",
            "description": "context details.",
            "example": "null"
          }
        },
        "example": {
          "reRatedQuoteResponse": {
            "errorDetails": null,
            "masterQuoteId": 36670,
            "statusCode": 200,
            "message": "Vital information has been updated: The shipper's city changed from ANAHEIM to TEMPLE CITY. The shipper's zip code changed from 92801 to 91780. ",
            "isRatingCompleted": true,
            "priceSearchResponse": [
              {
                "lowestPrice": 158.02,
                "quoteDetails": [
                  {
                    "quoteId": "0000278239",
                    "carrierCode": null,
                    "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 4,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 5.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 105.0
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 158.02,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 105.0,
                    "fsc": 0.0,
                    "scac": "CNWY",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278240",
                    "carrierCode": null,
                    "carrierName": "Saia Motor Freight",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 5,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 8.5
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 139.0
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 190.18,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 139.0,
                    "fsc": 0.0,
                    "scac": "SAIA",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278241",
                    "carrierCode": null,
                    "carrierName": "FedEx Economy",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 6,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 7.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 133.88
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 202.79,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 133.88,
                    "fsc": 0.0,
                    "scac": "FXNL",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278242",
                    "carrierCode": null,
                    "carrierName": "Dot-Line Transportation (5 Pallets Spots - Maximum)",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 5,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 5.95
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 153.34
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 211.2,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 153.34,
                    "fsc": 0.0,
                    "scac": "DOLR",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278243",
                    "carrierCode": null,
                    "carrierName": "Forward Air � Class Tariff",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 4,
                    "accessorials": [
                      {
                        "accessorialCode": "GACC",
                        "accessorialName": "Accessorial Charge (GACC)",
                        "accessorialCost": 7.5
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 145.31
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 214.76,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 145.31,
                    "fsc": 0.0,
                    "scac": "FWDA",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278244",
                    "carrierCode": null,
                    "carrierName": "UPS Freight",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 4,
                    "accessorials": [
                      {
                        "accessorialCode": "GHIC",
                        "accessorialName": "High Cost Charge (GHIC)",
                        "accessorialCost": 8.5
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 159.5
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 222.84,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 159.5,
                    "fsc": 0.0,
                    "scac": "UPGF",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278245",
                    "carrierCode": null,
                    "carrierName": "FedEx Priority",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 3,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 7.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 150.17
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 226.45,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 150.17,
                    "fsc": 0.0,
                    "scac": "FXNL",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278246",
                    "carrierCode": null,
                    "carrierName": "Saia Guaranteed - 5",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 5,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 8.5
                      },
                      {
                        "accessorialCode": "LGUAR",
                        "accessorialName": "Guaranteed (LGUAR)",
                        "accessorialCost": 35.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 139.0
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 232.18,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 139.0,
                    "fsc": 0.0,
                    "scac": "SAIA",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278247",
                    "carrierCode": null,
                    "carrierName": "Saia Guaranteed - 12",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 5,
                    "accessorials": [
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 8.5
                      },
                      {
                        "accessorialCode": "LGUAR",
                        "accessorialName": "Guaranteed (LGUAR)",
                        "accessorialCost": 50.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 139.0
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 250.18,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 139.0,
                    "fsc": 0.0,
                    "scac": "SAIA",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278248",
                    "carrierCode": null,
                    "carrierName": "FedEx Economy (Close of Business)",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 6,
                    "accessorials": [
                      {
                        "accessorialCode": "LGUAR",
                        "accessorialName": "Guaranteed (LGUAR)",
                        "accessorialCost": 94.0
                      },
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 7.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 133.88
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 339.28,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 133.88,
                    "fsc": 0.0,
                    "scac": "FXNL",
                    "totalDistance": 0.0
                  },
                  {
                    "quoteId": "0000278249",
                    "carrierCode": null,
                    "carrierName": "FedEx Priority (Close of Business)",
                    "serviceLevel": "LTL",
                    "movementType": "DIRECT",
                    "estimatedTransitTime": 3,
                    "accessorials": [
                      {
                        "accessorialCode": "LGUAR",
                        "accessorialName": "Guaranteed (LGUAR)",
                        "accessorialCost": 94.0
                      },
                      {
                        "accessorialCode": "GSTC",
                        "accessorialName": "State Charge (GSTC)",
                        "accessorialCost": 7.0
                      }
                    ],
                    "rateList": [
                      {
                        "isOptional": false,
                        "currencyCode": "USD",
                        "code": "LNH",
                        "name": "Line Haul",
                        "typeCode": "F",
                        "cost": 150.17
                      }
                    ],
                    "legs": null,
                    "accessorialsTotalCost": 0.0,
                    "subTotal": 0.0,
                    "totalCost": 362.94,
                    "isNmfcCarrier": false,
                    "isContractRate": true,
                    "currencyCode": "USD",
                    "expiresOn": null,
                    "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                    "pickUpDate": null,
                    "pickUpDateDisplay": null,
                    "lineHaul": 150.17,
                    "fsc": 0.0,
                    "scac": "FXNL",
                    "totalDistance": 0.0
                  }
                ],
                "lowestPriceQuote": {
                  "quoteId": "0000278239",
                  "carrierCode": null,
                  "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 4,
                  "accessorials": [
                    {
                      "accessorialCode": "GSTC",
                      "accessorialName": "State Charge (GSTC)",
                      "accessorialCost": 5.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 105.0
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 0.0,
                  "subTotal": 0.0,
                  "totalCost": 158.02,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 105.0,
                  "fsc": 0.0,
                  "scac": "CNWY",
                  "totalDistance": 0.0
                },
                "lowestGuaranteedPriceQuote": {
                  "quoteId": "0000278246",
                  "carrierCode": null,
                  "carrierName": "Saia Guaranteed - 5",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "GSTC",
                      "accessorialName": "State Charge (GSTC)",
                      "accessorialCost": 8.5
                    },
                    {
                      "accessorialCode": "LGUAR",
                      "accessorialName": "Guaranteed (LGUAR)",
                      "accessorialCost": 35.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 139.0
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 0.0,
                  "subTotal": 0.0,
                  "totalCost": 232.18,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 139.0,
                  "fsc": 0.0,
                  "scac": "SAIA",
                  "totalDistance": 0.0
                },
                "bestDealPriceQuote": {
                  "quoteId": "0000278239",
                  "carrierCode": null,
                  "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 4,
                  "accessorials": [
                    {
                      "accessorialCode": "GSTC",
                      "accessorialName": "State Charge (GSTC)",
                      "accessorialCost": 5.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 105.0
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 0.0,
                  "subTotal": 0.0,
                  "totalCost": 158.02,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-06-05T10:10:27.9149143+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 105.0,
                  "fsc": 0.0,
                  "scac": "CNWY",
                  "totalDistance": 0.0
                },
                "mode": "LTL"
              }
            ]
          },
          "orderId": 0,
          "statusCode": 202,
          "message": "Vital load information has changed that caused a ReRating. Please use new Quotes for creating order.",
          "context": null
        }
      },
      "commonquoteresponse": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Error message."
            },
            "description": "Error details while generating quotes."
          },
          "masterQuoteId": {
            "type": "integer",
            "description": "Unique Identifier for tracking Quote Request."
          },
          "statusCode": {
            "type": "integer",
            "description": "Success http response code 200.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Success message for generated Quote.",
            "example": "Quote creation succeeded! MasterQuoteId: 51490."
          },
          "priceSearchResponse": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "This  is to identify, specific price search response is for which transportation mode."
                },
                "lowestPrice": {
                  "type": "number",
                  "description": "The lowest price amount of quote for this specific mode."
                },
                "quoteDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quoteId": {
                        "type": "integer",
                        "description": "Unique Identifier for Quote."
                      },
                      "carrierCode": {
                        "type": "string",
                        "description": "Code used to uniquely identify the carrier."
                      },
                      "carrierName": {
                        "type": "string",
                        "description": "Name of the carrier."
                      },
                      "serviceLevel": {
                        "type": "string",
                        "description": "Service level.",
                        "enum": [ "Single", "Team", "LTL" ]
                      },
                      "movementType": {
                        "type": "string",
                        "description": "Type of Movement."
                      },
                      "estimatedTransitTime": {
                        "type": "integer",
                        "description": "Estimated transit time in days."
                      },
                      "accessorials": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessorialCode": {
                              "type": "string",
                              "description": "Accessorial Code."
                            },
                            "accessorialName": {
                              "type": "string",
                              "description": "Accessorial Name."
                            },
                            "accessorialCost": {
                              "type": "number",
                              "description": "Accessorial Cost ."
                            }
                          }
                        },
                        "description": "This is an array which contains the additional services and charges."
                      },
                      "rateList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "isOptional": {
                              "type": "boolean",
                              "description": "Is optional."
                            },
                            "currencyCode": {
                              "type": "string",
                              "description": "Currency Code for this Rate."
                            },
                            "code": {
                              "type": "string",
                              "description": "Rate Code."
                            },
                            "typeCode": {
                              "type": "string",
                              "description": "Type Code for this Rate."
                            },
                            "cost": {
                              "type": "string",
                              "description": "Cost."
                            }
                          }
                        },
                        "description": "This is an array which contains the rate split-up."
                      },
                      "legs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "stops": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "addressInformations ": {
                                    "type": "object",
                                    "properties": {
                                      "locationId": {
                                        "type": "string",
                                        "description": "Id of location."
                                      },
                                      "locationName": {
                                        "type": "string",
                                        "description": "Name of location."
                                      },
                                      "addressLine1": {
                                        "type": "string",
                                        "description": "Address line 1 of stop location."
                                      },
                                      "addressLine2": {
                                        "type": "string",
                                        "description": "Address line 2 of stop location."
                                      },
                                      "cityName": {
                                        "type": "string",
                                        "description": "City name belongs to stop location."
                                      },
                                      "stateCode": {
                                        "type": "string",
                                        "description": "State code of the stop location."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Country belongs to stop location."
                                      },
                                      "zipCode": {
                                        "type": "string",
                                        "description": "Postal Code."
                                      }
                                    },
                                    "required": [
                                      "cityName",
                                      "country",
                                      "stateCode",
                                      "zipCode"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of stop.",
                                    "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                                  },
                                  "scheduledTimeFrom": {
                                    "type": "string",
                                    "description": "The earliest time by which the service provider can reach the stop."
                                  },
                                  "scheduledTimeTo": {
                                    "type": "string",
                                    "description": "The Latest time by which the service provider can reach the stop."
                                  },
                                  "stopContactInformations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "firstName": {
                                          "type": "string",
                                          "description": "First name of contact person."
                                        },
                                        "lastName": {
                                          "type": "string",
                                          "description": "Last name of contact person."
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email for communication."
                                        },
                                        "phoneNumbers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Type": {
                                                "type": "string",
                                                "description": "Phone number types.",
                                                "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                              },
                                              "number": {
                                                "type": "string",
                                                "description": "Contact number."
                                              },
                                              "isPrimary": {
                                                "type": "boolean",
                                                "description": "Is contact primary information."
                                              }
                                            }
                                          },
                                          "description": "Primary and alternate numbers for communication."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "Title of contact person."
                                        },
                                        "isPrimary": {
                                          "type": "boolean",
                                          "description": "Is it the primary contact information?."
                                        }
                                      }
                                    },
                                    "description": "Contact Information for each stop."
                                  },
                                  "specialRequirement": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "code": "string",
                                          "description": "Special requirement type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Special requirements value."
                                        }
                                      }
                                    },
                                    "description": "The array of special requirements for this stop."
                                  },
                                  "stopReferenceNumbers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeCode": {
                                          "type": "string",
                                          "description": "Stop Reference Type code."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Actual value of stop reference code."
                                        }
                                      }
                                    },
                                    "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                  },
                                  "note": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Note's type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Note's value."
                                        }
                                      }
                                    }
                                  },
                                  "sequenceNo": {
                                    "type": "integer",
                                    "description": "Stop sequence number, required Required only if multi stop quote request."
                                  }
                                }
                              },
                              "description": "Stops information for this Quote including origin and destination.",
                              "required": [
                                "addressInformations",
                                "type"
                              ]
                            }
                          }
                        },
                        "description": "This is an array which holds the specific route information of this applicable quote price. "
                      },
                      "accessorialsTotalCost": {
                        "type": "number",
                        "description": "Accessorial's Total Cost."
                      },
                      "subTotal": {
                        "type": "number",
                        "description": "Sub Total."
                      },
                      "totalCost": {
                        "type": "number",
                        "description": "Total Cost."
                      },
                      "isNmfcCarrier": {
                        "type": "boolean",
                        "description": "Boolean flag to represent its an NMFC carrier."
                      },
                      "isContractRate": {
                        "type": "boolean",
                        "description": "Boolean flag to represent this quote is contract rate."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "Currency Code."
                      },
                      "expiresOn": {
                        "type": "string",
                        "description": "Quote expiry date."
                      },
                      "createdOn": {
                        "type": "string",
                        "description": "Quote created date."
                      }
                    }
                  },
                  "description": "This is an array of object which holds the list of quote details."
                },
                "lowestQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop."
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop."
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "lowestGuaranteedQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop."
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop."
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "bestDealQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "1:PICKUP", "2:INTERMEDIATE", "3:DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop."
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop."
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "1:MOBILE", "2:WORK", "3:HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                }
              },
              "Description": "It includes the list of quotes details for different modes such as LTL, FTL etc."
            }
          }
        },
        "example": {
          "errorDetails": null,
          "masterQuoteId": 81134516,
          "statusCode": 200,
          "message": "Success!",
          "priceSearchResponse": [
            {
              "mode": "LTL",
              "lowestPrice": 333.99,
              "quoteDetails": [
                {
                  "quoteId": 1,
                  "carrierCode": "DAFG",
                  "carrierName": "Dayton Freight Standard",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 1,
                  "accessorials": [
                    {
                      "name": "Other (General) (GOTH)",
                      "cost": 75
                    },
                    {
                      "name": "Hazardous Material (GHAZ)",
                      "cost": 30
                    },
                    {
                      "name": "Appointment Required (CAPPT)",
                      "cost": 44
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "rateCodeValue": "Line Haul",
                      "rateTypeCode": "F",
                      "rate": "100.0"
                    }
                  ],
                  "legs": [
                    {
                      "stops": [
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100015",
                            "locationName": "98001 - SEATTLE WA",
                            "type": "Pickup",
                            "zipCode": "98101"
                          }
                        },
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100014",
                            "locationName": "9712 - BELLEVUE WA",
                            "type": "Delivery",
                            "zipCode": "98028"
                          }
                        }
                      ]
                    }
                  ],
                  "accessorialsTotalCost": 0,
                  "subTotal": 92,
                  "totalCost": 333.99,
                  "isNmfccarrier": false,
                  "isContractRate": false,
                  "currencyCode": "USD",
                  "expiresOn": "2020-04-29T08:39:18.3251325Z",
                  "createdOn": "2020-04-27T08:39:31.4003798Z"
                },
                {
                  "quoteId": 2,
                  "carrierCode": "EXLA",
                  "carrierName": "Estes Express Lines (Guaranteed LTL Standard Transit: 5PM)",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 1,
                  "accessorials": [],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "rateCodeValue": "Line Haul",
                      "rateTypeCode": "F",
                      "rate": "100.0"
                    }
                  ],
                  "legs": [
                    {
                      "stops": [
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100015",
                            "locationName": "98001 - SEATTLE WA",
                            "type": "Pickup",
                            "zipCode": "98101"
                          }
                        },
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100014",
                            "locationName": "9712 - BELLEVUE WA",
                            "type": "Delivery",
                            "zipCode": "98028"
                          }
                        }
                      ]
                    }
                  ],
                  "accessorialsTotalCost": 0,
                  "subTotal": 124,
                  "totalCost": 191.16,
                  "isNmfccarrier": false,
                  "isContractRate": false,
                  "currencyCode": "USD",
                  "expiresOn": "2020-04-29T08:39:18.3251325Z",
                  "createdOn": "2020-04-27T08:39:31.4003798Z"
                }
              ],
              "lowestQuotePrice": {
                "quoteId": 0,
                "carrierCode": "",
                "carrierName": "NA",
                "estimatedTransitTime": 0,
                "lineHaul": 0,
                "fsc": 0,
                "accessorials": [],
                "accessorialsTotalCost": 0,
                "subTotal": 0,
                "totalCost": 0,
                "isNmfccarrier": false
              },
              "lowestGuaranteedQuotePrice": {
                "quoteId": 0,
                "carrierCode": "",
                "carrierName": "NA",
                "estimatedTransitTime": 0,
                "lineHaul": 0,
                "fsc": 0,
                "accessorials": [],
                "accessorialsTotalCost": 0,
                "subTotal": 0,
                "totalCost": 0,
                "isNmfccarrier": false
              },
              "bestDealQuotePrice": {
                "quoteId": 0,
                "carrierCode": "",
                "carrierName": "NA",
                "estimatedTransitTime": 0,
                "lineHaul": 0,
                "fsc": 0,
                "accessorials": [],
                "accessorialsTotalCost": 0,
                "subTotal": 0,
                "totalCost": 0,
                "isNmfccarrier": false
              }
            },
            {
              "mode": "TL",
              "lowestPrice": 555.20,
              "quoteDetails": [
                {
                  "quoteId": 1,
                  "serviceLevel": "Single",
                  "estimatedTransitTime": 0,
                  "accessorials": [],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "rateCodeValue": "Line Haul",
                      "rateTypeCode": "F",
                      "rate": "100.0"
                    }
                  ],
                  "legs": [
                    {
                      "stops": [
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100015",
                            "locationName": "98001 - SEATTLE WA",
                            "type": "Pickup",
                            "zipCode": "98101"
                          }
                        },
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100014",
                            "locationName": "9712 - BELLEVUE WA",
                            "type": "Delivery",
                            "zipCode": "98028"
                          }
                        }
                      ]
                    }
                  ],
                  "accessorialsTotalCost": 0,
                  "subTotal": 0,
                  "totalCost": 555.20,
                  "isNmfccarrier": false,
                  "pickUpDate": "2020-04-28T00:00:00-04:00",
                  "pickUpDateDisplay": "2020-04-28",
                  "isContractRate": false,
                  "currencyCode": "USD",
                  "expiresOn": "2020-04-29T08:39:18.3251325Z",
                  "createdOn": "2020-04-27T08:39:31.4003798Z"
                },
                {
                  "quoteId": 2,
                  "serviceLevel": "Team",
                  "estimatedTransitTime": 0,
                  "lineHaul": 0,
                  "fsc": 0,
                  "accessorials": [],
                  "legs": [
                    {
                      "stops": [
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100015",
                            "locationName": "98001 - SEATTLE WA",
                            "type": "Pickup",
                            "zipCode": "98101"
                          }
                        },
                        {
                          "addressInformations": {
                            "locationId": "MENLO\/A017.100014",
                            "locationName": "9712 - BELLEVUE WA",
                            "type": "Delivery",
                            "zipCode": "98028"
                          }
                        }
                      ]
                    }
                  ],
                  "accessorialsTotalCost": 0,
                  "subTotal": 0,
                  "totalCost": 805.20,
                  "isNmfccarrier": false,
                  "pickUpDate": "2020-04-28T00:00:00-04:00",
                  "pickUpDateDisplay": "2020-04-28",
                  "isContractRate": false,
                  "currencyCode": "USD",
                  "expiresOn": "2020-04-29T08:39:18.3251325Z",
                  "createdOn": "2020-04-27T08:39:31.4003798Z"
                }
              ]
            }
          ]
        }
      },
      "getquoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"

      },
      "quoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"

      },
      "successtoken": {
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Returned Bearer token to be used for subsequent API calls.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkU1OEQ3N0M3MEE2MkRCMUQwMDYwODRCNUNCREI0QkVBMUJGRjhGM0YiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1WTEzeHdwaTJ4MEFZSVMxeTl0TDZodl9qejgifQ.eyJuYmYiOjE1ODc1NzQxMDYsImV4cCI6MTU4NzU4MTMwNiwiaXNzIjoiaHR0cHM6Ly9sb2dpbi1zYW5kYm94LmF1dGh4cG8uY29tIiwiYXVkIjpbImh0dHBzOi8vbG9naW4tc2FuZGJveC5hdXRoeHBvLmNvbS9yZXNvdXJjZXMiLCJ4cG8tcmF0ZXMtYXBpIl0sImNsaWVudF9pZCI6Inhwby1rcmFmdC1oZWluei1pbnRlZ3JhdGlvbiIsInNjb3BlIjpbInhwby1yYXRlcy1hcGkiXX0.dnoOVJQdZTFTUIY8uWf4izO7gLmY8fIXZ4N7tlWMhxkZdk6uD8VtOoY8BaJodruSpYXD2qDDHBKQe0VN-VGFBOyjx1hBXt7MSNJM_KP9H66m1VVGouuO4NV9knhTogUK_Mmt4wsfUhpFhR6MZDPkDFkLI7RpajcOfqJCQE8w7dq_AWpcD8R1sWozWcuaJHZ9su0d6x_FIwbA58iZXi7Mw1iWBPi1uuemo3iL5sKyng8V5Pp3IPELUgTFxugtcIEkw9uw3NMcXhT6qLUzfjFaXGJMyxHY-P2VaCgrt6FURkltvef9kqd2_5mB-oJNB4CEqIw9QLOHcW62OnIoi_6Tiw"
          },
          "expires_in": {
            "type": "integer",
            "description": "Amount of time till token is valid. **7200 seconds (2 hours).**",
            "example": 7200
          },
          "token_type": {
            "type": "string",
            "description": "Type of token. **Bearer.**",
            "example": "Bearer"
          }
        }
      },
      "error401": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Unauthorized.",
            "example": "Unauthorized"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_VALIDATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Token has expired."
                }
              }
            }
          }
        }
      },
      "error400": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "Error Message.",
            "example": "Bad Request"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_GENERATION_FAILED"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Invalid Client"
                }
              }
            }
          }
        }
      },
      "error500": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal server error.",
            "example": "Internal server error"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "BACKEND_SERVICE_COMMUNICATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Error communicating with the backend service."
                }
              }
            }
          }
        }
      }
    }
  }
}
